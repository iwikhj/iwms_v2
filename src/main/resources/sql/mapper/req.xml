<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.req.mapper.ReqMapper">

	<sql id="selectReq">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY REQ.REQ_SEQ) AS rowNum
			, REQ.REQ_SEQ AS reqSeq
			, REQ.REQ_NO AS reqNo
			, SITE.SITE_NM AS siteNm	
			, REQ.REQ_TITLE AS reqTitle
			, REQ.REQ_YMD AS reqYmd
			, REQ.REQ_END_YMD AS reqEndYmd
			, REQ.REQ_TYPE_CD AS reqTypeCd
			, FN_GET_CODE_NM('REQ_TYPE_CD', REQ.REQ_TYPE_CD) AS reqType
			, REQ.REQ_GB_CD AS reqGbCd
			, FN_GET_CODE_NM('REQ_GB_CD', REQ.REQ_GB_CD) AS reqGb
            , CASE WHEN DTL.REQ_DTL_SEQ IS NULL THEN HIS.REQ_STAT_CD ELSE DTL.REQ_DTL_STAT_CD END AS reqStatCd
			, CASE WHEN DTL.REQ_DTL_SEQ IS NULL THEN FN_GET_CODE_NM('REQ_STAT_CD', HIS.REQ_STAT_CD) ELSE FN_GET_CODE_NM('REQ_DTL_STAT_CD', DTL.REQ_DTL_STAT_CD) END AS reqStat 
			, HIS.REQ_STAT_CMT AS reqStatCmt
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = REQ.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn
			, REQ.DEL_YN AS delYn	
			, REQ.USE_YN AS useYn	
			, DATE_FORMAT(REQ.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(REQ.REG_SEQ) AS regNm
			, LOGIN.USER_SEQ AS loginUserSeq
		FROM TB_REQ REQ
		INNER JOIN TB_SITE SITE ON REQ.SITE_SEQ = SITE.SITE_SEQ
		INNER JOIN TB_REQ_HIS HIS ON REQ.REQ_SEQ = HIS.REQ_SEQ
			AND HIS.REQ_HIS_SEQ = (SELECT MAX(REQ_HIS_SEQ) FROM TB_REQ_HIS WHERE REQ_SEQ = REQ.REQ_SEQ)	
		LEFT JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ					
			AND DTL.REQ_DTL_STAT_CD = (SELECT MIN(REQ_DTL_STAT_CD) FROM TB_REQ_DTL WHERE REQ_SEQ = REQ.REQ_SEQ)		
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		INNER JOIN TB_PROJ_USER PU ON SITE.PROJ_SEQ = PU.PROJ_SEQ
			AND (PU.USER_SEQ = LOGIN.USER_SEQ OR LOGIN.AUTH_SEQ = 1 )
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE REQ.DEL_YN = 'N' AND REQ.USE_YN = 'Y' END)		
	</sql>

	<resultMap id="resultReqMap" type="com.iwi.iwms.api.req.domain.ReqInfo">
		<result property="reqSeq" column="reqSeq"/>			
	   	<collection property="tasks" column="reqSeq" 
			ofType="com.iwi.iwms.api.req.domain.ReqTaskInfo" select="listTaskByReqSeq"/>	
	</resultMap>
	
	<!-- 요청사항 목록 조회 -->		
	<select id="listReq" parameterType="hashMap"
		resultMap="resultReqMap">
		<include refid="selectReq"></include>
		<if test='useYn != null and useYn != ""'>
			AND REQ.USE_YN = UPPER(#{useYn})
		</if>		
		GROUP BY REQ.REQ_SEQ	
		ORDER BY REQ.REQ_SEQ DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	
		
	<!-- 요청사항 수 -->
	<select id="countReq" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(*)
		FROM (
			SELECT 
				REQ.REQ_SEQ
			FROM TB_REQ REQ
			INNER JOIN TB_SITE SITE ON REQ.SITE_SEQ = SITE.SITE_SEQ
			INNER JOIN TB_REQ_HIS HIS ON REQ.REQ_SEQ = HIS.REQ_SEQ
				AND HIS.REQ_HIS_SEQ = (SELECT MAX(REQ_HIS_SEQ) FROM TB_REQ_HIS WHERE REQ_SEQ = REQ.REQ_SEQ)	
			LEFT JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ					
				AND DTL.REQ_DTL_STAT_CD = (SELECT MIN(REQ_DTL_STAT_CD) FROM TB_REQ_DTL WHERE REQ_SEQ = REQ.REQ_SEQ)		
			LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
			INNER JOIN TB_PROJ_USER PU ON SITE.PROJ_SEQ = PU.PROJ_SEQ
				AND (PU.USER_SEQ = LOGIN.USER_SEQ OR LOGIN.AUTH_SEQ = 1 )
			WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE REQ.DEL_YN = 'N' AND REQ.USE_YN = 'Y' END)		
			<if test='useYn != null and useYn != ""'>
				AND REQ.USE_YN = UPPER(#{useYn})
			</if>				
			GROUP BY REQ.REQ_SEQ			
		) A
	</select>	
	
	<!-- 요청사항 단일 조회 -->	
	<select id="getReqBySeq" parameterType="hashMap"
		resultMap="resultReqMap">
		<include refid="selectReq"></include>
			AND REQ.REQ_SEQ = #{reqSeq}
		GROUP BY REQ.REQ_SEQ		
	</select>	

	<!-- 요청사항 담당자 작업 내역 -->		
	<select id="listTaskByReqSeq" parameterType="long"
		resultType="com.iwi.iwms.api.req.domain.ReqTaskInfo">
		SELECT
			DTL.REQ_SEQ AS reqSeq
			, DTL.REQ_DTL_SEQ AS reqDtlSeq
			, DTL.REQ_DTL_NO AS reqDtlNo
            , FN_GET_USER_NM(DTL.REQ_DTL_USER_SEQ) AS reqDtlUserNm		
            , DTL.REQ_DTL_STD_YMD AS reqDtlStdYmd
            , DTL.REQ_DTL_END_YMD AS reqDtlEndYmd            
            , DTL.BUSI_ROLL_CD AS busiRollCd
            , FN_GET_CODE_NM('BUSI_ROLL_CD', DTL.BUSI_ROLL_CD) AS busiRoll
            , DTL.REQ_DTL_STAT_CD AS reqDtlStatCd
            , FN_GET_CODE_NM('REQ_DTL_STAT_CD', DTL.REQ_DTL_STAT_CD) AS reqDtlStat
            , DTL.REQ_DTL_EVAL_SCORE AS reqDtlEvalScore
            , DTL.REQ_DTL_EVAL_CMT AS reqDtlEvalCmt
			, DTL.USE_YN AS useYn
			, DATE_FORMAT(HIS.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(HIS.REG_SEQ) AS reqNm		
		FROM TB_REQ_DTL DTL
		INNER JOIN TB_REQ_DTL_HIS HIS ON DTL.REQ_DTL_SEQ = HIS.REQ_DTL_SEQ
			AND HIS.REQ_DTL_HIS_SEQ = (SELECT MAX(REQ_DTL_HIS_SEQ) FROM TB_REQ_DTL_HIS WHERE REQ_DTL_SEQ = DTL.REQ_DTL_SEQ)	 
		WHERE DTL.USE_YN = 'Y'
			AND DTL.REQ_SEQ = #{reqSeq} 
		ORDER BY DTL.REQ_DTL_SEQ
	</select>	
	
	<!-- 요청사항 등록 -->	
	<insert id="insertReq" parameterType="com.iwi.iwms.api.req.domain.Req"
		useGeneratedKeys="true" keyProperty="reqSeq">
		
		INSERT INTO TB_REQ
		(
		    REQ_NO
		    , SITE_SEQ
			, REQ_YMD
			, REQ_TYPE_CD
			, REQ_GB_CD
			, REQ_END_YMD
			, REQ_TITLE
			, REQ_CONTENT
			, USE_YN
			, REG_SEQ
		) VALUES (
		    (
				SELECT 
					CONCAT('R', DATE_FORMAT(CURRENT_TIMESTAMP, "%y"), '-', LPAD(COALESCE(MAX(SUBSTR(S_REQ.REQ_NO, 5)), 0) + 1, 6, 0))
				FROM TB_REQ AS S_REQ
				WHERE S_REQ.REQ_NO LIKE CONCAT('R', DATE_FORMAT(CURRENT_TIMESTAMP, "%y"), '%')
				LIMIT 1		    
		    )
			, #{siteSeq}
			, DATE_FORMAT(CURRENT_TIMESTAMP, "%Y%m%d")
			, #{reqTypeCd}
			, #{reqGbCd}
			, #{reqEndYmd}
			, #{reqTitle}
			, #{reqContent}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>		

	<!-- 요청사항 수정 -->
	<update id="updateReq" parameterType="com.iwi.iwms.api.req.domain.Req">
		UPDATE TB_REQ 
		SET
		   REQ_TYPE_CD = #{reqTypeCd}
			, REQ_GB_CD = #{reqGbCd}
			, REQ_END_YMD = #{reqEndYmd}
			, REQ_TITLE = #{reqTitle}
			, REQ_CONTENT = #{reqContent}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE REQ_SEQ = #{reqSeq}	
	</update>	
	
	<!-- 요청사항 삭제 -->
	<delete id="deleteReq" parameterType="com.iwi.iwms.api.req.domain.Req">
		DELETE 
		FROM TB_REQ
		WHERE REQ_SEQ = #{reqSeq}	 
	</delete>
	
	<!-- 요청사항 이력 등록 -->	
	<insert id="insertReqHis" parameterType="com.iwi.iwms.api.req.domain.ReqHis">
		INSERT INTO TB_REQ_HIS
		(
		    REQ_SEQ
		    , REQ_STAT_CD
			, REQ_STAT_CMT
			, REG_SEQ
		) VALUES (
			#{reqSeq}
			, #{reqStatCd}
			, #{reqStatCmt}
			, #{loginUserSeq}
		)		
	</insert>
</mapper>