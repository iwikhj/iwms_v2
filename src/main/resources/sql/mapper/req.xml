<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.req.mapper.ReqMapper">

	<sql id="selectReq">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY REQ.REQ_SEQ) AS rowNum
			, REQ.REQ_SEQ AS reqSeq
			, REQ.REQ_NO AS reqNo
			, DTL.REQ_DTL_SEQ AS reqDtlSeq
			, DTL.REQ_DTL_NO AS reqDtlNo			
			, SITE.SITE_SEQ AS siteSeq	
			, SITE.SITE_NM AS siteNm	
			, REQ.REQ_TITLE AS reqTitle
			, REQ.REQ_YMD AS reqYmd
			, REQ.REQ_END_YMD AS reqEndYmd
			, REQ.REQ_TYPE_CD AS reqTypeCd
			, FN_GET_CODE_NM('REQ_TYPE_CD', REQ.REQ_TYPE_CD) AS reqType
			, REQ.REQ_GB_CD AS reqGbCd
			, FN_GET_CODE_NM('REQ_GB_CD', REQ.REQ_GB_CD) AS reqGb
			, FN_GET_USER_NM(DTL.REQ_DTL_USER_SEQ) AS reqDtlUser
			, DTL.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', DTL.BUSI_ROLL_CD) AS busiRoll
			, CASE WHEN DHIS.REQ_DTL_SEQ IS NULL THEN HIS.REQ_STAT_CD ELSE DHIS.REQ_DTL_STAT_CD END AS statCd
			, CASE WHEN DHIS.REQ_DTL_SEQ IS NULL THEN FN_GET_CODE_NM('REQ_STAT_CD', HIS.REQ_STAT_CD) ELSE FN_GET_CODE_NM('REQ_DTL_STAT_CD', DHIS.REQ_DTL_STAT_CD) END AS stat 
			, CASE WHEN DHIS.REQ_DTL_SEQ IS NULL THEN HIS.REQ_STAT_CMT ELSE DHIS.REQ_DTL_STAT_CMT END AS statCmt
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = REQ.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn
			, REQ.DEL_YN AS delYn	
			, REQ.USE_YN AS useYn	
			, DATE_FORMAT(REQ.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(REQ.REG_SEQ) AS regNm
		FROM TB_REQ REQ
		INNER JOIN TB_SITE SITE ON REQ.SITE_SEQ = SITE.SITE_SEQ
		INNER JOIN TB_REQ_HIS HIS ON REQ.REQ_SEQ = HIS.REQ_SEQ
			AND HIS.REQ_HIS_SEQ = (SELECT MAX(REQ_HIS_SEQ) FROM TB_REQ_HIS WHERE REQ_SEQ = REQ.REQ_SEQ)	
		LEFT JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ	
		LEFT JOIN TB_REQ_DTL_HIS DHIS ON DTL.REQ_DTL_SEQ = DHIS.REQ_DTL_SEQ
			AND DHIS.REQ_DTL_HIS_SEQ = (SELECT MAX(REQ_DTL_HIS_SEQ) FROM TB_REQ_DTL_HIS WHERE REQ_DTL_SEQ = DTL.REQ_DTL_SEQ)	
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE REQ.DEL_YN = 'N' AND REQ.USE_YN = 'Y' END)		
			AND (
				SELECT
					COUNT(*)
				FROM TB_PROJ_USER
				WHERE PROJ_SEQ = SITE.PROJ_SEQ
					AND USER_SEQ = LOGIN.USER_SEQ OR LOGIN.AUTH_SEQ = 1
			) > 0	
	</sql>

	<resultMap id="resultReqMap" type="com.iwi.iwms.api.req.domain.ReqInfo">
		<result property="reqSeq" column="reqSeq"/>			
		<association property="finalStat" column="reqSeq" select="getFinalStatBySeq"/>
	</resultMap>
	
	<!-- 요청사항 목록 조회 -->		
	<select id="listReq" parameterType="hashMap"
		resultMap="resultReqMap">
		SELECT 
			*
		FROM (
			<include refid="selectReq"></include>
		) t1
		WHERE 1 = 1		
		<if test='busiRollCd != null and busiRollCd != ""'>
			AND t1.busiRollCd = #{busiRollCd}
		</if>		
		<if test='statCd != null and statCd != ""'>
			AND t1.statCd = #{statCd}
		</if>			
		<if test='siteSeq != null and siteSeq != ""'>
			AND t1.siteSeq = #{siteSeq}
		</if>			
		<if test='reqStdYmd != null and reqStdYmd != ""'>
			AND t1.reqYmd &gt;= #{reqStdYmd}
		</if>	
		<if test='reqEndYmd != null and reqEndYmd != ""'>
			AND t1.reqYmd &lt;= #{reqEndYmd}
		</if>				
		<if test='reqTitle != null and reqTitle != ""'>
			AND LOWER(t1.reqTitle) LIKE CONCAT('%', LOWER(#{reqTitle}), '%') 
		</if>	
		<if test='regNm != null and regNm != ""'>
			AND LOWER(t1.regNm) LIKE CONCAT('%', LOWER(#{regNm}), '%') 
		</if>
		<if test='reqDtlUser != null and reqDtlUser != ""'>
			AND LOWER(t1.reqDtlUser) LIKE CONCAT('%', LOWER(#{reqDtlUser}), '%') 
		</if>
		ORDER BY t1.reqSeq DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	
		
	<!-- 요청사항 수 -->
	<select id="countReq" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(*)
		FROM (
			<include refid="selectReq"></include>
		) t1	
		WHERE 1 = 1			
		<if test='busiRollCd != null and busiRollCd != ""'>
			AND t1.busiRollCd = #{busiRollCd}
		</if>		
		<if test='statCd != null and statCd != ""'>
			AND t1.statCd = #{statCd}
		</if>			
		<if test='siteSeq != null and siteSeq != ""'>
			AND t1.siteSeq = #{siteSeq}
		</if>			
		<if test='reqStdYmd != null and reqStdYmd != ""'>
			AND t1.reqYmd &gt;= #{reqStdYmd}
		</if>	
		<if test='reqEndYmd != null and reqEndYmd != ""'>
			AND t1.reqYmd &lt;= #{reqEndYmd}
		</if>				
		<if test='reqTitle != null and reqTitle != ""'>
			AND LOWER(t1.reqTitle) LIKE CONCAT('%', LOWER(#{reqTitle}), '%') 
		</if>	
		<if test='regNm != null and regNm != ""'>
			AND LOWER(t1.regNm) LIKE CONCAT('%', LOWER(#{regNm}), '%') 
		</if>
		<if test='reqDtlUser != null and reqDtlUser != ""'>
			AND LOWER(t1.reqDtlUser) LIKE CONCAT('%', LOWER(#{reqDtlUser}), '%') 
		</if>		
	</select>	
	
	<resultMap id="resultGetReqMap" type="com.iwi.iwms.api.req.domain.ReqInfo">
		<result property="reqSeq" column="reqSeq"/>			
	   	<collection property="attachedFiles" column="fileRefTb=fileRefTb,fileRefCol=fileRefCol,fileRefSeq=reqSeq" 
			ofType="com.iwi.iwms.api.file.domain.UploadFileInfo" select="com.iwi.iwms.api.file.mapper.FileMapper.listFileByRef"/>
	</resultMap>
	
	<!-- 요청사항 단일 조회 -->	
	<select id="getReqBySeq" parameterType="hashMap"
		resultMap="resultGetReqMap">
		SELECT
			REQ.REQ_SEQ AS reqSeq
			, REQ.REQ_NO AS reqNo	
			, SITE.PROJ_SEQ AS projSeq		
			, SITE.SITE_SEQ AS siteSeq	
			, SITE.SITE_NM AS siteNm	
			, REQ.REQ_TITLE AS reqTitle
			, REQ.REQ_YMD AS reqYmd
			, REQ.REQ_END_YMD AS reqEndYmd
			, REQ.REQ_TYPE_CD AS reqTypeCd
			, FN_GET_CODE_NM('REQ_TYPE_CD', REQ.REQ_TYPE_CD) AS reqType
			, REQ.REQ_GB_CD AS reqGbCd
			, FN_GET_CODE_NM('REQ_GB_CD', REQ.REQ_GB_CD) AS reqGb
			, HIS.REQ_STAT_CD AS statCd
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = REQ.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn
			, REQ.DEL_YN AS delYn	
			, REQ.USE_YN AS useYn	
			, DATE_FORMAT(REQ.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(REQ.REG_SEQ) AS regNm
			, 'TB_REQ' AS fileRefTb
			, 'REQ_SEQ' AS fileRefCol			
		FROM TB_REQ REQ
		INNER JOIN TB_SITE SITE ON REQ.SITE_SEQ = SITE.SITE_SEQ
		INNER JOIN TB_REQ_HIS HIS ON REQ.REQ_SEQ = HIS.REQ_SEQ
			AND HIS.REQ_HIS_SEQ = (SELECT MAX(REQ_HIS_SEQ) FROM TB_REQ_HIS WHERE REQ_SEQ = REQ.REQ_SEQ)	   		
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE REQ.DEL_YN = 'N' AND REQ.USE_YN = 'Y' END)	
			AND REQ.REQ_SEQ = #{reqSeq}
	</select>	

	<!-- 요청사항 최종 상태 -->		
	<select id="getFinalStatBySeq" parameterType="long"
		resultType="string">
		SELECT
			FN_GET_CODE_NM(SUBSTRING(finalStatCd, 3), LEFT(finalStatCd, 2)) AS finalStat     
		FROM (
			SELECT 	
				MIN(CASE WHEN DTL.REQ_DTL_STAT_CD IS NULL THEN CONCAT(HIS.REQ_STAT_CD, 'REQ_STAT_CD') ELSE CONCAT(DTL.REQ_DTL_STAT_CD, 'REQ_DTL_STAT_CD')  END) AS finalStatCd
			FROM TB_REQ REQ
			INNER JOIN TB_REQ_HIS HIS ON REQ.REQ_SEQ = HIS.REQ_SEQ
				AND HIS.REQ_HIS_SEQ = (SELECT MAX(REQ_HIS_SEQ) FROM TB_REQ_HIS WHERE REQ_SEQ = REQ.REQ_SEQ)	
			LEFT JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ	
	           WHERE REQ.REQ_SEQ = #{reqSeq}
		) t1
	</select>	
	
	<!-- 요청사항 등록 -->	
	<insert id="insertReq" parameterType="com.iwi.iwms.api.req.domain.Req"
		useGeneratedKeys="true" keyProperty="reqSeq">
		
		INSERT INTO TB_REQ
		(
		    REQ_NO
		    , SITE_SEQ
			, REQ_YMD
			, REQ_TYPE_CD
			, REQ_GB_CD
			, REQ_END_YMD
			, REQ_TITLE
			, REQ_CONTENT
			, USE_YN
			, REG_SEQ
		) VALUES (
		    (
				SELECT 
					CONCAT('R', DATE_FORMAT(CURRENT_TIMESTAMP, "%y"), '-', LPAD(COALESCE(MAX(SUBSTR(S_REQ.REQ_NO, 5)), 0) + 1, 6, 0))
				FROM TB_REQ AS S_REQ
				WHERE S_REQ.REQ_NO LIKE CONCAT('R', DATE_FORMAT(CURRENT_TIMESTAMP, "%y"), '%')
				LIMIT 1		    
		    )
			, #{siteSeq}
			, DATE_FORMAT(CURRENT_TIMESTAMP, "%Y%m%d")
			, #{reqTypeCd}
			, #{reqGbCd}
			, #{reqEndYmd}
			, #{reqTitle}
			, #{reqContent}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>		

	<!-- 요청사항 수정 -->
	<update id="updateReq" parameterType="com.iwi.iwms.api.req.domain.Req">
		UPDATE TB_REQ 
		SET
		   REQ_TYPE_CD = #{reqTypeCd}
			, REQ_GB_CD = #{reqGbCd}
			, REQ_END_YMD = #{reqEndYmd}
			, REQ_TITLE = #{reqTitle}
			, REQ_CONTENT = #{reqContent}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE REQ_SEQ = #{reqSeq}	
	</update>	
	
	<!-- 요청사항 삭제 -->
	<delete id="deleteReq" parameterType="com.iwi.iwms.api.req.domain.Req">
		DELETE 
		FROM TB_REQ
		WHERE REQ_SEQ = #{reqSeq}	 
	</delete>
	
	<!-- 요청사항 이력 등록 -->	
	<insert id="insertReqHis" parameterType="com.iwi.iwms.api.req.domain.His">
		INSERT INTO TB_REQ_HIS
		(
		    REQ_SEQ
		    , REQ_STAT_CD
			, REQ_STAT_CMT
			, REG_SEQ
		) VALUES (
			#{reqSeq}
			, #{statCd}
			, #{statCmt}
			, #{loginUserSeq}
		)		
	</insert>
	
	<resultMap id="resultDeptTask" type="com.iwi.iwms.api.comp.domain.DeptInfo">
	   	<collection property="users" column="deptSeq=deptSeq,projSeq=projSeq" 
			ofType="com.iwi.iwms.api.user.domain.UserInfo" select="listDeptUserByProjSeq"/>
	</resultMap>
		
	<!-- 작업 담당자 배정을 위한 부서 목록 조회 -->
	<select id="listDeptForTask" parameterType="long"
		resultMap="resultDeptTask">
		SELECT 
			DEPT.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm	
			, DEPT.DEPT_SEQ AS deptSeq
			, DEPT.DEPT_NM AS deptNm
			, DEPT.DEPT_DESC AS deptDesc
			, PROJ.PROJ_SEQ AS projSeq
		FROM TB_DEPT DEPT
		INNER JOIN TB_COMPANY COMP ON DEPT.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_PROJ PROJ ON PROJ.PROJ_SEQ = #{projSeq}
		WHERE DEPT.USE_YN = 'Y'
			AND COMP.DEL_YN = 'N'
            AND COMP.USE_YN = 'Y'
			AND COMP.COMP_GB_CD = '01'
		ORDER BY DEPT.DEPT_ORDER_NO
	</select>	
	
	<!-- 부서별 프로젝트에 등록된 작업자 목록 조회 -->
	<select id="listDeptUserByProjSeq" parameterType="hashMap"
		resultType="com.iwi.iwms.api.comp.domain.DeptUserInfo">
		SELECT 
			USER.USER_SEQ AS userSeq
            , USER.USER_NM AS userNm
            , USER.POSI_NM AS posiNm
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD)  AS busiRoll
		FROM TB_USER USER
		INNER JOIN TB_PROJ_USER PU ON USER.USER_SEQ = PU.USER_SEQ
		WHERE USER.DEL_YN = 'N'
            AND USER.USE_YN = 'Y'
            AND USER.DEPT_SEQ = #{deptSeq}
            AND PU.PROJ_SEQ = #{projSeq}
	</select>		
</mapper>