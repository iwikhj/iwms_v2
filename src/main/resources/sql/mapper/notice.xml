<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.notice.mapper.NoticeMapper">
	
	<resultMap id="resultNoticeMap" type="com.iwi.iwms.api.notice.domain.NoticeInfo">
		<result property="noticeSeq" column="noticeSeq"/>
	   	<collection property="attachedFiles" column="fileRefTb=fileRefTb,fileRefCol=fileRefCol,fileRefSeq=noticeSeq" 
			ofType="com.iwi.iwms.api.file.domain.UploadFileInfo" select="com.iwi.iwms.api.file.mapper.FileMapper.listFileByRef"/>
	</resultMap>
	
	<!-- 공지사항 목록 조회 -->	
	<select id="listNotice" parameterType="hashMap"
		resultMap="resultNoticeMap">
		/* listNotice */
		SELECT 
			ROW_NUMBER() OVER(ORDER BY NOTI.NOTICE_SEQ) AS rowNum
			, NOTI.NOTICE_SEQ AS noticeSeq
			, NOTI.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm	
			, NOTI.TITLE AS title
			, NOTI.NOTICE_GB_CD AS noticeGbCd
			, FN_GET_CODE_NM('NOTICE_GB_CD', NOTI.NOTICE_GB_CD) AS noticeGb
			, NOTI.FIXED_TOP_YN AS fixedTopYn
			, NOTI.MAIN_TOP_YN AS mainTopYn
			, NOTI.VIEW_CNT AS viewCnt
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = NOTI.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn					
			, NOTI.USE_YN AS useYn
			, DATE_FORMAT(NOTI.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, REG.USER_NM AS regNm
			, DATE_FORMAT(NOTI.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(NOTI.UPT_SEQ) AS uptNm
			, 'TB_NOTICE' AS fileRefTb
			, 'NOTICE_SEQ' AS fileRefCol			
		FROM TB_NOTICE NOTI
		LEFT JOIN TB_COMPANY COMP ON NOTI.COMP_SEQ = COMP.COMP_SEQ 
		LEFT JOIN TB_USER REG ON NOTI.REG_SEQ = REG.USER_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE NOTI.USE_YN = 'Y' AND (LOGIN.COMP_SEQ = NOTI.COMP_SEQ OR NOTI.COMP_SEQ IS NULL) END)		
		<if test='keykind != null and keykind != "" and keyword != null and keyword != ""'>
			<if test='keykind == "compNm"'>
				AND COMP.COMP_NM LIKE CONCAT('%', #{keyword}, '%') 
			</if>	
			<if test='keykind == "title"'>	
				AND NOTI.TITLE LIKE CONCAT('%', #{keyword}, '%') 
			</if>	
			<if test='keykind == "noticeGbCd"'>			
				AND NOTI.NOTICE_GB_CD = #{keyword}
			</if>	
			<if test='keykind == "regNm"'>			
				AND REG.USER_NM LIKE CONCAT('%', #{keyword}, '%') 
			</if>		
		</if>
		ORDER BY NOTI.NOTICE_SEQ DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	
	
	<!-- 공지사항 수 조회 -->
	<select id="countNotice" parameterType="hashMap"
		resultType="int">
		/* countNotice */
		SELECT 
			COUNT(*)
		FROM TB_NOTICE NOTI
		LEFT JOIN TB_COMPANY COMP ON NOTI.COMP_SEQ = COMP.COMP_SEQ 
		LEFT JOIN TB_USER REG ON NOTI.REG_SEQ = REG.USER_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE NOTI.USE_YN = 'Y' AND (LOGIN.COMP_SEQ = NOTI.COMP_SEQ OR NOTI.COMP_SEQ IS NULL) END)		
		<if test='keykind != null and keykind != "" and keyword != null and keyword != ""'>
			<if test='keykind == "compNm"'>
				AND COMP.COMP_NM LIKE CONCAT('%', #{keyword}, '%') 
			</if>	
			<if test='keykind == "title"'>	
				AND NOTI.TITLE LIKE CONCAT('%', #{keyword}, '%') 
			</if>	
			<if test='keykind == "noticeGbCd"'>			
				AND NOTI.NOTICE_GB_CD = #{keyword}
			</if>	
			<if test='keykind == "regNm"'>			
				AND REG.USER_NM LIKE CONCAT('%', #{keyword}, '%') 
			</if>		
		</if>						
	</select>		

	<!-- 공지사항 단일 조회 -->	
	<select id="getNoticeBySeq" parameterType="hashMap"
		resultMap="resultNoticeMap">
		/* getNoticeBySeq */
		SELECT 
			NOTI.NOTICE_SEQ AS noticeSeq
			, NOTI.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm	
			, NOTI.TITLE AS title
			, NOTI.CONTENT AS content
			, NOTI.NOTICE_GB_CD AS noticeGbCd
			, FN_GET_CODE_NM('NOTICE_GB_CD', NOTI.NOTICE_GB_CD) AS noticeGb
			, NOTI.FIXED_TOP_YN AS fixedTopYn
			, NOTI.MAIN_TOP_YN AS mainTopYn
			, NOTI.VIEW_CNT AS viewCnt
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = NOTI.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn		
			, NOTI.USE_YN AS useYn
			, DATE_FORMAT(NOTI.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(NOTI.REG_SEQ) AS regNm
			, DATE_FORMAT(NOTI.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(NOTI.UPT_SEQ) AS uptNm
			, 'TB_NOTICE' AS fileRefTb
			, 'NOTICE_SEQ' AS fileRefCol
		FROM TB_NOTICE NOTI
		LEFT JOIN TB_COMPANY COMP ON NOTI.COMP_SEQ = COMP.COMP_SEQ 
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE NOTI.USE_YN = 'Y' AND (LOGIN.COMP_SEQ = NOTI.COMP_SEQ OR NOTI.COMP_SEQ IS NULL) END)		
			AND NOTI.NOTICE_SEQ = #{noticeSeq}
	</select>	

	<!-- 공지사항 등록 -->	
	<insert id="insertNotice" parameterType="com.iwi.iwms.api.notice.domain.Notice"
		useGeneratedKeys="true" keyProperty="noticeSeq">
		/* insertNotice */
		INSERT INTO TB_NOTICE
		(
			COMP_SEQ
			, TITLE
			, CONTENT
			, NOTICE_GB_CD
			, FIXED_TOP_YN
			, MAIN_TOP_YN
			, USE_YN
			, REG_SEQ
		) VALUES (
			#{compSeq}
			, #{title}
			, #{content}
			, #{noticeGbCd}
			, #{fixedTopYn}
			, #{mainTopYn}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>		

	<!-- 공지사항 수정 -->	
	<update id="updateNotice" parameterType="com.iwi.iwms.api.notice.domain.Notice">
		/* updateNotice */
		UPDATE TB_NOTICE 
		SET
			COMP_SEQ = #{compSeq}
			, TITLE = #{title}
			, CONTENT = #{content}
			, NOTICE_GB_CD = #{noticeGbCd}
			, FIXED_TOP_YN = #{fixedTopYn}
			, MAIN_TOP_YN = #{mainTopYn}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE NOTICE_SEQ = #{noticeSeq}	
	</update>	

	<!-- 공지사항 삭제 -->		
	<delete id="deleteNotice" parameterType="com.iwi.iwms.api.notice.domain.Notice">
		/* deleteNotice */
		DELETE 
		FROM TB_NOTICE
		WHERE NOTICE_SEQ = #{noticeSeq}	 
	</delete>
	
	<!-- 공지사항 조회수 1 증가 -->		
	<update id="updateViewCnt" parameterType="com.iwi.iwms.api.notice.domain.Notice">
		/* updateViewCnt */
		UPDATE TB_NOTICE 
		SET
			VIEW_CNT = VIEW_CNT + 1
		WHERE NOTICE_SEQ = #{noticeSeq}	 
	</update>
			
</mapper>