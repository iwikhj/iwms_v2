<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.user.mapper.UserMapper">

	<!-- 사용자 조회 -->
	<sql id="selectUser">
		SELECT 
			USER.USER_SEQ AS userSeq
			, USER.USER_ID AS userId
			, USER.USER_NM AS userNm
			, USER.USER_GB_CD AS userGbCd
			, USER_GB_CODE.CODE_NM AS userGb
			, USER.USER_BUSI_CD AS userBusiCd
			, USER_BUSI_CODE.CODE_NM AS userBusi
			, USER.POSITION_SEQ AS positionSeq
			, POSI.POSITION_NM AS positionNm
			, USER.DUTY_GB_CD AS dutyGbCd
			, USER.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, USER.USER_TEL AS userTel
			, USER.USER_HP AS userHp
			, USER.USER_POST_NO AS userPostNo
			, USER.USER_ADDR AS userAddr
			, USER.USER_DTL_ADDR AS userDtlAddr
			, USER.USER_CI_KEY AS userCiKey
			, USER.USER_DI_KEY AS userDiKey
			, USER.PWD_RESET_YN AS pwdResetYn
			, USER.LOGIN_ERR_CNT AS loginErrCnt
			, USER.VERIFY_YN AS verifyYn
			, USER.LAST_LOGIN_IP AS lastLoginIp
			, USER.LAST_LOGIN_DT AS lastLoginDt
			, USER.USE_YN AS useYn
			, USER.SSO_ID AS ssoId
			, USER.USER_ROLE AS userRole
			, USER.USER_DOR_YMD AS userDorYmd
			, USER.USER_DEL_YMD AS userDelYmd
			, DATE_FORMAT(USER.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, REG_USER.USER_NM AS regNm
			, DATE_FORMAT(USER.UPDT_DT, "%Y-%m-%d %H:%i:%s") AS updtDt
			, UPDT_USER.USER_NM AS updtNm
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_POSITION POSI ON USER.POSITION_SEQ = POSI.POSITION_SEQ
        LEFT JOIN TB_CODE USER_GB_CODE ON USER.USER_GB_CD = USER_GB_CODE.CODE_CD AND USER_GB_CODE.UP_CODE_CD = 'USER_GB_CD'       
        LEFT JOIN TB_CODE USER_BUSI_CODE ON USER.USER_BUSI_CD = USER_BUSI_CODE.CODE_CD AND USER_BUSI_CODE.UP_CODE_CD = 'BUSI_ROLL_CD'  		
		LEFT JOIN TB_USER REG_USER ON USER.REG_SEQ = REG_USER.USER_SEQ
		LEFT JOIN TB_USER UPDT_USER ON USER.UPDT_SEQ = UPDT_USER.USER_SEQ 
		WHERE USER.USE_YN = 'Y'
	</sql>
	
	<!-- 사용자 목록 조회 -->
	<select id="findAll" parameterType="hashMap"
		resultType="com.iwi.iwms.api.user.domain.UserInfo">
		<include refid="selectUser"></include>
		<if test='search != null and search != ""'>
			AND USER.USER_NM LIKE CONCAT('%', #{search}, '%') 
			OR COMP.COMP_NM LIKE CONCAT('%', #{search}, '%')
			OR POSI.POSITION_NM LIKE CONCAT('%', #{search}, '%')
		</if>			
		ORDER BY USER.USER_SEQ DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	
	
	<!-- 사용자 COUNT -->
	<select id="count" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(USER.USER_SEQ)
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_POSITION POSI ON USER.POSITION_SEQ = POSI.POSITION_SEQ
		<if test='search != null and search != ""'>
			AND USER.USER_NM LIKE CONCAT('%', #{search}, '%') 
			OR COMP.COMP_NM LIKE CONCAT('%', #{search}, '%')
			OR POSI.POSITION_NM LIKE CONCAT('%', #{search}, '%')
		</if>			
	</select>	
	
	<!-- SEQ로 특정 사용자 조회 -->
	<select id="findBySeq" parameterType="long"
		resultType="com.iwi.iwms.api.user.domain.UserInfo">
		<include refid="selectUser"></include>
		AND USER.USER_SEQ = #{userSeq}
	</select>	
	
	<!-- USER ID로 특정 사용자 조회 -->
	<select id="findById" parameterType="String"
		resultType="com.iwi.iwms.api.user.domain.UserInfo">
		<include refid="selectUser"></include>
		AND USER.USER_ID = #{userId}
	</select>	
	
	<!-- 사용자 정보 등록 -->
	<insert id="save" parameterType="com.iwi.iwms.api.user.domain.User"
		useGeneratedKeys="true" keyProperty="userSeq">
		INSERT INTO TB_USER
		(
		    USER_ID
		    , USER_NM
			, USER_PWD
			, USER_GB_CD
			, USER_BUSI_CD
			, POSITION_SEQ
			, DUTY_GB_CD
			, COMP_SEQ
			, USER_TEL
			, USER_HP
			, USER_POST_NO
			, USER_ADDR
			, USER_DTL_ADDR
			, USER_CI_KEY
			, USER_DI_KEY
			, LOGIN_ERR_CNT
			, PWD_RESET_YN
			, VERIFY_YN
			, USE_YN
			, SSO_ID
			, USER_ROLE
			, REG_DT
			, REG_SEQ
		) VALUES (
		    #{userId}
			, #{userNm}
			, #{userPwd}
			, #{userGbCd}
			, #{userBusiCd}
			, #{positionSeq}
			, #{dutyGbCd}
			, #{compSeq}
			, #{userTel}
			, #{userHp}
			, #{userPostNo}
			, #{userAddr}
			, #{userDtlAddr}
			, #{userCiKey}
			, #{userDiKey}
			, 0
			, 'Y'
			, #{verifyYn}
			, #{useYn}
			, #{ssoId}
			, #{userRole}
			, CURRENT_TIMESTAMP
			, #{regSeq}
		)		
	</insert>		

	<!-- 사용자 정보 수정 -->
	<update id="update" parameterType="com.iwi.iwms.api.user.domain.UserUpdate">
		UPDATE TB_USER 
		SET
		    USER_NM = #{userNm}
			, USER_GB_CD = #{userGbCd}
			, USER_BUSI_CD = #{userBusiCd}
			, POSITION_SEQ = #{positionSeq}
			, DUTY_GB_CD = #{dutyGbCd}
			, COMP_SEQ = #{compSeq}
			, USER_TEL = #{userTel}
			, USER_HP = #{userHp}
			, USER_POST_NO = #{userPostNo}
			, USER_ADDR = #{userAddr}
			, USER_DTL_ADDR = #{userDtlAddr}
			, USER_CI_KEY = #{userCiKey}
			, USER_DI_KEY = #{userDiKey}
			, VERIFY_YN = #{verifyYn}
			, USE_YN = #{useYn}
			, USER_ROLE = #{userRole}
			, UPDT_DT = CURRENT_TIMESTAMP
			, UPDT_SEQ = #{updtSeq}
		WHERE USER_SEQ = #{userSeq}	
	</update>	
	
	<!-- 사용자 정보 삭제 -->
	<delete id="delete" parameterType="com.iwi.iwms.api.user.domain.User">
		DELETE 
		FROM TB_USER
		WHERE USER_SEQ = #{userSeq}	 
	</delete>
	
	<!-- 사용자 비밀번호 변경 -->
	<update id="updatePassword" parameterType="com.iwi.iwms.api.user.domain.User">
		UPDATE TB_USER 
		SET
		    LOGIN_ERR_CNT = 0
			, PWD_RESET_YN = #{pwdResetYn}
			, UPDT_DT = CURRENT_TIMESTAMP
			, UPDT_SEQ = #{updtSeq}
		WHERE USER_SEQ = #{userSeq}	
	</update>	
	
	<!-- 사용자 로그인 성공 정보 갱신 -->
	<update id="updateLoginSuccess" parameterType="com.iwi.iwms.api.user.domain.User">
		UPDATE TB_USER 
		SET
		    LOGIN_ERR_CNT = 0
			, LAST_LOGIN_IP = #{lastLoginIp}
			, LAST_LOGIN_DT = CURRENT_TIMESTAMP
			, UPDT_DT = CURRENT_TIMESTAMP
			, UPDT_SEQ = #{updtSeq}
		WHERE USER_SEQ = #{userSeq}	
	</update>	
	
	<!-- 사용자 로그인 실패 정보 갱신 -->
	<update id="updateLoginFailure" parameterType="com.iwi.iwms.api.user.domain.User">
		UPDATE TB_USER 
		SET
		    LOGIN_ERR_CNT = LOGIN_ERR_CNT + 1
		    , UPDT_DT = CURRENT_TIMESTAMP
			, UPDT_SEQ = USER_SEQ
		WHERE USER_ID = #{userId}	
	</update>		
	
	<!-- 로그인 한 사용자 정보 -->
	<resultMap id="resultLoginUserMap" type="com.iwi.iwms.api.login.domain.LoginUserInfo">
		<result property="userSeq" column="userSeq"/>
		<result property="userId" column="userId"/>
		<result property="userNm" column="userNm"/>
		<result property="userGbCd" column="userGbCd"/>
		<result property="userBusiCd" column="userBusiCd"/>
		<result property="positionSeq" column="positionSeq"/>
		<result property="positionNm" column="positionNm"/>
		<result property="dutyGbCd" column="dutyGbCd"/>
		<result property="compSeq" column="compSeq"/>
		<result property="compNm" column="compNm"/>
		<result property="ssoId" column="ssoId"/>
		<result property="userRole" column="userRole"/>
		
	   	<collection property="menuList" column="userSeq" 
			ofType="com.iwi.iwms.api.user.domain.MenuInfo" select="findPermissionsMenu"/>
	</resultMap>

	<resultMap id="resultPageMap" type="com.iwi.iwms.api.user.domain.MenuInfo">
		<result property="menuSeq" column="menuSeq"/>
		<result property="menuNm" column="menuNm"/>
		<result property="menuOrderNo" column="menuOrderNo"/>
		<result property="menuDesc" column="menuDesc"/>
		<result property="pageUrl" column="pageUrl"/>
		<result property="pageTarget" column="pageTarget"/>
		<result property="hasPermission" column="hasPermission"/>
		
	   	<collection property="childMenuInfoList" column="menuSeq=menuSeq,userSeq=userSeq" 
			ofType="com.iwi.iwms.api.user.domain.MenuInfo" select="childPermissionsMenu"/>
	</resultMap>	
	
	<select id="findLoginUser" parameterType="String"
		resultMap="resultLoginUserMap">
		SELECT 
			USER.USER_SEQ AS userSeq
			, USER.USER_ID AS userId
			, USER.USER_NM AS userNm
			, USER.USER_GB_CD AS userGbCd
			, USER.USER_BUSI_CD AS userBusiCd
			, USER.POSITION_SEQ AS positionSeq
			, POSI.POSITION_NM AS positionNm
			, USER.DUTY_GB_CD AS dutyGbCd
			, USER.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, USER.SSO_ID AS ssoId
			, USER.USER_ROLE AS userRole
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_POSITION POSI ON USER.POSITION_SEQ = POSI.POSITION_SEQ
		WHERE USER.USE_YN = 'Y'
			AND USER.SSO_ID = #{ssoId}
	</select>
	
	<select id="findPermissionsMenu" resultType="com.iwi.iwms.api.user.domain.MenuInfo">
		SELECT 
			MENU.MENU_SEQ AS menuSeq
			, MENU.MENU_NM AS menuNm
			, MENU.MENU_ORDER_NO AS menuOrderNo
			, MENU.MENU_DESC AS menuDesc
			, MENU.PAGE_URL AS pageUrl
			, MENU.PAGE_TARGET AS pageTarget
		    , CASE WHEN ROLL_MENU.USER_ROLL_MENU_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END AS hasPermission
		    , ROLL_MENU.USER_SEQ AS userSeq
		FROM TB_MENU MENU
		LEFT JOIN 
		(
				SELECT 
					ROLL_MENU.MENU_SEQ
					, ROLL_MENU.USER_ROLL_MENU_SEQ
					, USER.USER_SEQ
				FROM TB_USER_ROLL_MENU ROLL_MENU
				LEFT JOIN TB_USER USER ON ROLL_MENU.USER_ROLL_NM = USER.USER_ROLE
				WHERE USER.USER_SEQ = #{userSeq}
		) ROLL_MENU ON MENU.MENU_SEQ = ROLL_MENU.MENU_SEQ
		WHERE MENU.UP_MENU_SEQ IS NULL
		ORDER BY MENU.MENU_ORDER_NO
	</select>
	
	<select id="childPermissionsMenu" resultType="com.iwi.iwms.api.user.domain.MenuInfo">
		SELECT 
			MENU.MENU_SEQ AS menuSeq
			, MENU.MENU_NM AS menuNm
			, MENU.MENU_ORDER_NO AS menuOrderNo
			, MENU.MENU_DESC AS menuDesc
			, MENU.PAGE_URL AS pageUrl
			, MENU.PAGE_TARGET AS pageTarget
		    , CASE WHEN USER_ROLL_MENU_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END AS hasPermission
		FROM TB_MENU MENU
		LEFT JOIN 
		(
				SELECT 
					ROLL_MENU.MENU_SEQ
					, ROLL_MENU.USER_ROLL_MENU_SEQ
				FROM TB_USER_ROLL_MENU ROLL_MENU
				LEFT JOIN TB_USER USER ON ROLL_MENU.USER_ROLL_NM = USER.USER_ROLE
				WHERE USER.USER_SEQ = #{userSeq}
		) ROLL_MENU ON MENU.MENU_SEQ = ROLL_MENU.MENU_SEQ
		WHERE MENU.UP_MENU_SEQ IS NOT NULL
			AND MENU.UP_MENU_SEQ = #{menuSeq}
		ORDER BY MENU.MENU_ORDER_NO	
	</select>	

</mapper>