<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.user.mapper.UserMapper">
	
	<sql id="selectUser">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY USER.USER_SEQ) AS rowNum
			, USER.USER_SEQ AS userSeq
			, USER.USER_ID AS userId
			, USER.USER_NM AS userNm
			, USER.USER_EMAIL AS userEmail
			, USER.SSO_KEY AS ssoKey
			, AUTH.AUTH_SEQ AS authSeq
			, AUTH.AUTH_CD AS authCd
			, AUTH.AUTH_NM AS authNm
			, USER.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, USER.DEPT_SEQ AS deptSeq
			, DEPT.DEPT_NM AS deptNm
			, USER.POSI_NM AS posiNm
			, USER.USER_GB_CD AS userGbCd
			, FN_GET_CODE_NM('USER_GB_CD', USER.USER_GB_CD)  AS userGb
			, USER.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD)  AS busiRoll
			, USER.USER_TEL AS userTel
			, USER.USER_HP AS userHp
			, USER.USER_POST_NO AS userPostNo
			, USER.USER_ADDR AS userAddr
			, USER.USER_DTL_ADDR AS userDtlAddr
			, USER.VERIFY_YN AS verifyYn
			, USER.PWD_RESET_YN AS pwdResetYn
			, USER.LOGIN_ERR_CNT AS loginErrCnt
			, USER.LAST_LOGIN_IP AS lastLoginIp
			, USER.LAST_LOGIN_DT AS lastLoginDt
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = USER.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn
			, USER.USE_YN AS useYn		
			, USER.DEL_YN AS delYn	
			, DATE_FORMAT(USER.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(USER.REG_SEQ) AS regNm    
			, DATE_FORMAT(USER.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(USER.UPT_SEQ) AS uptNm		
			, 'TB_USER' AS fileRefTb
			, 'USER_SEQ' AS fileRefCol				
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_AUTH AUTH ON USER.AUTH_SEQ = AUTH.AUTH_SEQ
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ  
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE USER.DEL_YN = 'N' AND USER.USE_YN = 'Y' END)		
	</sql>

	<resultMap id="resultUserMap" type="com.iwi.iwms.api.user.domain.UserInfo">
		<result property="userSeq" column="userSeq"/>			
		<association property="profileFile" column="fileRefTb=fileRefTb,fileRefCol=fileRefCol,fileRefSeq=userSeq"
			 select="com.iwi.iwms.api.file.mapper.FileMapper.listFileByRef"/>
	</resultMap>
	
	<!-- 사용자 목록 조회 -->
	<select id="listUser" parameterType="hashMap"
		resultMap="resultUserMap">
		<include refid="selectUser"></include>
		<if test='userNm != null and userNm != ""'>
			AND LOWER(USER.USER_NM) LIKE CONCAT('%', LOWER(#{userNm}), '%') 
		</if>	
		<if test='compNm != null and compNm != ""'>
			AND LOWER(COMP.COMP_NM) LIKE CONCAT('%', LOWER(#{compNm}), '%') 
		</if>	
		<if test='busiRollCd != null and busiRollCd != ""'>
			AND USER.BUSI_ROLL_CD = #{busiRollCd}
		</if>	
		<if test='useYn != null and useYn != ""'>
			AND USER.USE_YN = #{useYn}
		</if>			
		ORDER BY USER.USER_SEQ DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	
	
	<!-- 사용자 수 -->
	<select id="countUser" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(*)
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_AUTH AUTH ON USER.AUTH_SEQ = AUTH.AUTH_SEQ
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ  
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE USER.DEL_YN = 'N' AND USER.USE_YN = 'Y' END)	
		<if test='userNm != null and userNm != ""'>
			AND LOWER(USER.USER_NM) LIKE CONCAT('%', LOWER(#{userNm}), '%') 
		</if>	
		<if test='compNm != null and compNm != ""'>
			AND LOWER(COMP.COMP_NM) LIKE CONCAT('%', LOWER(#{compNm}), '%') 
		</if>	
		<if test='busiRollCd != null and busiRollCd != ""'>
			AND USER.BUSI_ROLL_CD = #{busiRollCd}
		</if>	
		<if test='useYn != null and useYn != ""'>
			AND USER.USE_YN = #{useYn}
		</if>			
	</select>	
	
	<!-- 사용자 단일 조회 -->
	<select id="getUserBySeq" parameterType="hashMap"
		resultMap="resultUserMap">
		<include refid="selectUser"></include>
			AND USER.USER_SEQ = #{userSeq}
	</select>	
	
	<!-- 아이디와 일치하는 사용자 조회 -->
	<select id="getUserById" parameterType="String"
		resultType="com.iwi.iwms.api.user.domain.UserInfo">
		SELECT 
			USER_SEQ AS userSeq
			, USER_ID AS userId
			, SSO_KEY AS ssoKey
			, USER_EMAIL AS userEmail
			, LOGIN_ERR_CNT AS loginErrCnt
			, USE_YN AS useYn		
		FROM TB_USER	
		WHERE DEL_YN = 'N' 	
			AND USER_ID = #{userId}
	</select>	
	
	<!-- 사용자 정보 등록 -->
	<insert id="insertUser" parameterType="com.iwi.iwms.api.user.domain.User"
		useGeneratedKeys="true" keyProperty="userSeq">
		INSERT INTO TB_USER
		(
		    USER_ID
		    , USER_NM
			, USER_EMAIL
			, SSO_KEY
			, AUTH_SEQ
			, COMP_SEQ
			, DEPT_SEQ
			, POSI_NM
			, USER_GB_CD
			, BUSI_ROLL_CD
			, USER_TEL
			, USER_HP
			, USER_POST_NO
			, USER_ADDR
			, USER_DTL_ADDR
			, VERIFY_YN
			, USE_YN
			, REG_SEQ
		) VALUES (
		    #{userId}
			, #{userNm}
			, #{userEmail}
			, #{ssoKey}
			, #{authSeq}
			, #{compSeq}
			, #{deptSeq}
			, #{posiNm}
			, #{userGbCd}
			, #{busiRollCd}
			, #{userTel}
			, #{userHp}
			, #{userPostNo}
			, #{userAddr}
			, #{userDtlAddr}
			, #{verifyYn}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>		

	<!-- 사용자 정보 수정 -->
	<update id="updateUser" parameterType="com.iwi.iwms.api.user.domain.UserUpdate">
		UPDATE TB_USER 
		SET
		    USER_NM = #{userNm}
		    , USER_EMAIL = #{userEmail}
		    , AUTH_SEQ = #{authSeq}
		    , COMP_SEQ = #{compSeq}
		    , DEPT_SEQ = #{deptSeq}
		    , POSI_NM = #{posiNm}
			, USER_GB_CD = #{userGbCd}
			, BUSI_ROLL_CD = #{busiRollCd}
			, USER_TEL = #{userTel}
			, USER_HP = #{userHp}
			, USER_POST_NO = #{userPostNo}
			, USER_ADDR = #{userAddr}
			, USER_DTL_ADDR = #{userDtlAddr}
			, VERIFY_YN = #{verifyYn}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE USER_SEQ = #{userSeq}	
	</update>	
	
	<!-- 사용자 정보 삭제 -->
	<delete id="deleteUser" parameterType="com.iwi.iwms.api.user.domain.User">
		DELETE 
		FROM TB_USER
		WHERE USER_SEQ = #{userSeq}	 
	</delete>
	
	<!-- 사용자 비밀번호 변경 -->
	<update id="updatePassword" parameterType="com.iwi.iwms.api.user.domain.UserPwd">
		UPDATE TB_USER 
		SET
		    LOGIN_ERR_CNT = 0
			, PWD_RESET_YN = #{pwdResetYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE USER_SEQ = #{userSeq}	
	</update>	
	
	<!-- 사용자 로그인 성공 정보 갱신 -->
	<update id="updateLoginSuccess" parameterType="com.iwi.iwms.api.user.domain.User">
		UPDATE TB_USER 
		SET
		    LOGIN_ERR_CNT = 0
			, LAST_LOGIN_IP = #{loginIp}
			, LAST_LOGIN_DT = CURRENT_TIMESTAMP
		WHERE USER_SEQ = #{userSeq}	
	</update>	
	
	<!-- 사용자 로그인 실패 정보 갱신 -->
	<update id="updateLoginFailure" parameterType="com.iwi.iwms.api.user.domain.User">
		UPDATE TB_USER 
		SET
		    LOGIN_ERR_CNT = LOGIN_ERR_CNT + 1
		WHERE USER_ID = #{userId}	
	</update>		

	<resultMap id="resultLoginUserMap" type="com.iwi.iwms.api.login.domain.LoginUserInfo">
	   	<collection property="menus" column="authSeq"  
			ofType="com.iwi.iwms.api.auth.domain.AuthMenuInfo" select="com.iwi.iwms.api.auth.mapper.AuthMapper.getAuthMenuByAuthSeq"/>
	</resultMap>
		
	<!-- 로그인 한 사용자 정보 -->
	<select id="getLoginUser" parameterType="String"
		resultMap="resultLoginUserMap">
		SELECT 
			USER.USER_SEQ AS userSeq
			, USER.USER_ID AS userId
			, USER.USER_NM AS userNm
			, USER.USER_EMAIL AS userEmail
			, USER.AUTH_SEQ AS authSeq
			, AUTH.AUTH_CD AS authCd
			, AUTH.AUTH_NM AS authNm
			, USER.USER_GB_CD AS userGbCd
			, FN_GET_CODE_NM('USER_GB_CD', USER.USER_GB_CD) AS userGb
			, USER.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD) AS busiRoll
			, DEPT.DEPT_NM AS deptNm
			, USER.POSI_NM AS posiNm
			, COMP.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, USER.LAST_LOGIN_IP AS loginIp
			, USER.LAST_LOGIN_DT AS loginDt			
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_AUTH AUTH ON USER.AUTH_SEQ = AUTH.AUTH_SEQ
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ    
		WHERE USER.DEL_YN = 'N'
			AND USER.USE_YN = 'Y'		
			AND USER.SSO_KEY = #{ssoKey}
	</select>
	
	<!-- 사용자 이름, 전화번호, 소속이 일치하는 사용자 검색 -->
	<select id="getUserIdByNameTelComp" parameterType="com.iwi.iwms.api.user.domain.UserFindId"
		resultType="String">
		SELECT 
			USER.USER_ID
		FROM TB_USER USER
		INNER JOIN TB_AUTH AUTH ON USER.AUTH_SEQ = AUTH.AUTH_SEQ 
		WHERE DEL_YN = 'N' 	
			AND AUTH_CD != 'ROLE_IWMS_ADMIN'
			AND USER.USER_NM = #{userNm}
			AND (USER.USER_TEL = #{userTel} OR USER.USER_HP = #{userTel})
			AND USER.COMP_SEQ = #{compSeq}
	</select>	
	
	<!-- 사용자별 이용가능한 프로젝트 목록 조회 -->	
	<select id="listProjByUserSeq" parameterType="long"
		resultType="com.iwi.iwms.api.user.domain.UserProjInfo">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY PROJ.PROJ_SEQ) AS rowNum
			, PROJ.COMP_SEQ AS projSeq
			, PROJ.PROJ_SEQ AS projSeq
			, PROJ.PROJ_NM AS projNm
			, PROJ.PROJ_SW_NM AS projSwNm
			, PROJ.PROJ_STD_YMD AS projStdYmd
			, PROJ.PROJ_END_YMD AS projEndYmd
		FROM TB_PROJ PROJ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_PROJ_USER PU ON PROJ.PROJ_SEQ = PU.PROJ_SEQ
		WHERE COMP.DEL_YN = 'N'
			AND COMP.USE_YN = 'Y'	
			AND PROJ.USE_YN = 'Y'		
			AND PU.USER_SEQ = #{userSeq}
		ORDER BY PROJ.PROJ_SEQ DESC
	</select>	
	
	<!-- 사용자별 이용가능한 사이트 목록 조회 -->	
	<select id="listSiteByUserSeq" parameterType="long"
		resultType="com.iwi.iwms.api.user.domain.UserSiteInfo">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY SITE.SITE_SEQ) AS rowNum
			, SITE.PROJ_SEQ AS projSeq
			, SITE.SITE_SEQ AS siteSeq
			, SITE.SITE_NM AS siteNm
			, SITE.SITE_SW_NM AS siteSwNm
			, SITE.SITE_GB_CD AS siteGbCd
			, FN_GET_CODE_NM('SITE_GB_CD', SITE.SITE_GB_CD) AS siteGb
		FROM TB_SITE SITE
		INNER JOIN TB_PROJ PROJ ON SITE.PROJ_SEQ = PROJ.PROJ_SEQ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_PROJ_USER PU ON PROJ.PROJ_SEQ = PU.PROJ_SEQ
		WHERE COMP.DEL_YN = 'N'
			AND COMP.USE_YN = 'Y'			
			AND PROJ.USE_YN = 'Y'
			AND SITE.USE_YN = 'Y'
			AND PU.USER_SEQ  = #{userSeq}
		ORDER BY SITE.SITE_SEQ DESC		
	</select>		
</mapper>