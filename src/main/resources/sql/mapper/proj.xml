<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.comp.mapper.ProjMapper">

	<sql id="selectProj">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY PROJ.PROJ_SEQ) AS rowNum
			, PROJ.PROJ_SEQ AS projSeq
			, PROJ.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, PROJ.PROJ_NM AS projNm
			, PROJ.PROJ_SW_NM AS projSwNm
			, PROJ.PROJ_STD_YMD AS projStdYmd
			, PROJ.PROJ_END_YMD AS projEndYmd
			, PROJ.USE_YN AS useYn
			, DATE_FORMAT(PROJ.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(PROJ.REG_SEQ) AS regNm
			, DATE_FORMAT(PROJ.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(PROJ.UPT_SEQ) AS uptNm
		FROM TB_PROJ PROJ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		WHERE PROJ.USE_YN = 'Y'
	</sql>

	<resultMap id="resultProjMap" type="com.iwi.iwms.api.comp.domain.ProjInfo">
		<!-- 
		<result property="projSeq" column="projSeq"/>
		 -->
	</resultMap>
	
	<!-- 프로젝트 목록 조회 -->	
	<select id="listProj" parameterType="hashMap"
		resultMap="resultProjMap">
		<include refid="selectProj"></include>
		<if test='compSeq != null and compSeq != ""'>
			AND PROJ.COMP_SEQ = #{compSeq}
		</if>
		<if test='search != null and search != ""'>
			AND PROJ.PROJ_NM LIKE CONCAT('%', #{search}, '%') 
			OR PROJ.PROJ_SW_NM LIKE CONCAT('%', #{search}, '%') 
			OR COMP.COMP_NM LIKE CONCAT('%', #{search}, '%') 
		</if>			
		ORDER BY PROJ.PROJ_SEQ DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	

	<!-- 프로젝트 수 -->	
	<select id="countProj" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(*)
		FROM TB_PROJ PROJ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		WHERE PROJ.USE_YN = 'Y'
		<if test='compSeq != null and compSeq != ""'>
			AND PROJ.COMP_SEQ = #{compSeq}
		</if>
		<if test='search != null and search != ""'>
			AND PROJ.PROJ_NM LIKE CONCAT('%', #{search}, '%') 
			OR PROJ.PROJ_SW_NM LIKE CONCAT('%', #{search}, '%') 
			OR COMP.COMP_NM LIKE CONCAT('%', #{search}, '%') 
		</if>				
	</select>		

	<!-- 사용자별 프로젝트 목록 조회 -->
	<select id="listProjByUserSeq" parameterType="long"
		resultMap="resultProjMap">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY PROJ.PROJ_SEQ) AS rowNum
			, PROJ.PROJ_SEQ AS projSeq
			, PROJ.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, PROJ.PROJ_NM AS projNm
			, PROJ.PROJ_SW_NM AS projSwNm
			, PROJ.PROJ_STD_YMD AS projStdYmd
			, PROJ.PROJ_END_YMD AS projEndYmd
			, PROJ.USE_YN AS useYn
			, DATE_FORMAT(PROJ.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(PROJ.REG_SEQ) AS regNm
			, DATE_FORMAT(PROJ.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(PROJ.UPT_SEQ) AS uptNm
		FROM TB_PROJ PROJ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_PROJ_USER PU ON PROJ.PROJ_SEQ = PU.PROJ_SEQ
		INNER JOIN TB_USER USER ON PU.USER_SEQ = USER.USER_SEQ
		WHERE PROJ.USE_YN = 'Y'
			AND PU.USER_SEQ = #{userSeq}
		ORDER BY PROJ.PROJ_SEQ DESC
	</select>	
	
	<!-- 프로젝트 단일 조회 -->	
	<select id="getProjBySeq" parameterType="long"
		resultMap="resultProjMap">
		<include refid="selectProj"></include>
			AND PROJ.PROJ_SEQ = #{projSeq}
	</select>	

	<!-- 프로젝트 등록 -->
	<insert id="insertProj" parameterType="com.iwi.iwms.api.comp.domain.Proj"
		useGeneratedKeys="true" keyProperty="projSeq">
		INSERT INTO TB_PROJ
		(
		    COMP_SEQ
		    , PROJ_NM
		    , PROJ_SW_NM
		    , PROJ_STD_YMD
		    , PROJ_END_YMD
			, USE_YN
			, REG_SEQ
		) VALUES (
		    #{compSeq}
			, #{projNm}
			, #{projSwNm}
			, #{projStdYmd}
			, #{projEndYmd}
			, #{useYn}
			, #{regSeq}
		)		
	</insert>		

	<!-- 프로젝트 수정 -->
	<update id="updateProj" parameterType="com.iwi.iwms.api.comp.domain.Proj">
		UPDATE TB_PROJ 
		SET
		    PROJ_NM = #{projNm}
			, PROJ_SW_NM = #{projSwNm}
			, PROJ_STD_YMD = #{projStdYmd}
			, PROJ_END_YMD = #{projEndYmd}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{uptSeq}
		WHERE PROJ_SEQ = #{projSeq}	
	</update>	

	<!-- 프로젝트 삭제 -->	
	<delete id="deleteProj" parameterType="com.iwi.iwms.api.comp.domain.Proj">
		DELETE 
		FROM TB_PROJ
		WHERE PROJ_SEQ = #{projSeq}	 
	</delete>

	<!-- 프로젝트 고객사 담당자 목록 조회 -->	
	<select id="listCustProjUser" parameterType="long"
		resultType="com.iwi.iwms.api.comp.domain.ProjUserInfo">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY USER.USER_SEQ) AS rowNum
            , PU.PROJ_SEQ AS projSeq
            , COMP.COMP_NM AS compNm			
			, USER.USER_SEQ AS userSeq
			, USER.USER_NM AS userNm
			, USER.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD) AS busiRoll
			, DEPT.DEPT_NM AS deptNm
            , USER.POSI_NM AS posiNm
            , CASE WHEN PU.USER_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END AS assigned
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
        INNER JOIN TB_PROJ PROJ ON COMP.COMP_SEQ = PROJ.COMP_SEQ     
        LEFT JOIN TB_PROJ_USER PU ON USER.USER_SEQ = PU.USER_SEQ 
			AND PROJ.PROJ_SEQ = PU.PROJ_SEQ
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ   			
		WHERE USER.USE_YN = 'Y'
			AND PROJ.PROJ_SEQ = #{projSeq}
			AND USER.USER_GB_CD IN('10','11')
		ORDER BY USER.USER_SEQ
	</select>
		
	<!-- 프로젝트 수행사 담당자 목록 조회 -->	
	<select id="listPerfProjUser" parameterType="long"
		resultType="com.iwi.iwms.api.comp.domain.ProjUserInfo">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY USER.USER_SEQ) AS rowNum
            , PU.PROJ_SEQ AS projSeq
            , COMP.COMP_NM AS compNm			
			, USER.USER_SEQ AS userSeq
			, USER.USER_NM AS userNm
			, USER.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD) AS busiRoll
			, DEPT.DEPT_NM AS deptNm
            , USER.POSI_NM AS posiNm
            , CASE WHEN PU.USER_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END AS assigned
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
        LEFT JOIN TB_PROJ_USER PU ON USER.USER_SEQ = PU.USER_SEQ 
			AND PU.PROJ_SEQ = #{projSeq}
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ   
		WHERE USER.USE_YN = 'Y'
			AND USER.USER_GB_CD = '01'
		ORDER BY USER.USER_SEQ
	</select>

	<!-- 프로젝트 사용자 등록 -->
	<insert id="updateProjUser" parameterType="list">
		INSERT INTO TB_PROJ_USER
		(
		    PROJ_SEQ
		    , USER_SEQ
		    , BUSI_ROLL_CD
		    , USE_YN
			, REG_SEQ
		) 
		VALUES 
		<foreach collection="list" item="item" separator="," >
		(
		    #{item.projSeq}
			, #{item.userSeq}
			, (SELECT BUSI_ROLL_CD FROM TB_USER WHERE USER_SEQ = #{item.userSeq})
			, #{item.useYn}
			, #{item.regSeq}
		)			
		</foreach>
	</insert>		
	
	<!-- 프로로젝트별 사용자 삭제 -->	
	<delete id="deleteProjUser" parameterType="long">
		DELETE 
		FROM TB_PROJ_USER
		WHERE PROJ_SEQ = #{projSeq}	 
	</delete>		
</mapper>