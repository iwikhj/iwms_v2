<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.comp.mapper.ProjMapper">

	<!-- 프로젝트 목록 조회 -->	
	<select id="listProj" parameterType="hashMap"
		resultType="com.iwi.iwms.api.comp.domain.ProjInfo">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY PROJ.PROJ_SEQ) AS rowNum
			, PROJ.PROJ_SEQ AS projSeq
			, PROJ.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, PROJ.PROJ_NM AS projNm
			, PROJ.PROJ_SW_NM AS projSwNm
			, PROJ.PROJ_STD_YMD AS projStdYmd
			, PROJ.PROJ_END_YMD AS projEndYmd
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = PROJ.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn	
			, PROJ.USE_YN AS useYn
			, DATE_FORMAT(PROJ.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(PROJ.REG_SEQ) AS regNm
			, DATE_FORMAT(PROJ.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(PROJ.UPT_SEQ) AS uptNm
		FROM TB_PROJ PROJ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE COMP.DEL_YN = 'N' AND COMP.USE_YN = 'Y' AND PROJ.USE_YN = 'Y' END)	
		<if test='compSeq != null and compSeq != ""'>
			AND PROJ.COMP_SEQ = #{compSeq}
		</if>
		<if test='useYn != null and useYn != ""'>
			AND PROJ.USE_YN = UPPER(#{useYn})
		</if>		
		ORDER BY PROJ.PROJ_SEQ DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	

	<!-- 프로젝트 수 -->	
	<select id="countProj" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(*)
		FROM TB_PROJ PROJ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE COMP.DEL_YN = 'N' AND COMP.USE_YN = 'Y' AND PROJ.USE_YN = 'Y' END)
		<if test='compSeq != null and compSeq != ""'>
			AND PROJ.COMP_SEQ = #{compSeq}
		</if>
		<if test='useYn != null and useYn != ""'>
			AND PROJ.USE_YN = UPPER(#{useYn})
		</if>				
	</select>		

	<resultMap id="resultProjMap" type="com.iwi.iwms.api.comp.domain.ProjInfo">
		<result property="projSeq" column="projSeq"/>
	   	<collection property="sites" column="projSeq=projSeq,loginUserSeq=loginUserSeq" 
			ofType="com.iwi.iwms.api.comp.domain.SiteInfo" select="listSite"/>
	   	<collection property="users" column="projSeq" 
			ofType="com.iwi.iwms.api.comp.domain.ProjUserInfo" select="listUserByProjSeq"/>
	</resultMap>
	
	<!-- 프로젝트 단일 조회 -->	
	<select id="getProjBySeq" parameterType="hashMap"
		resultMap="resultProjMap">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY PROJ.PROJ_SEQ) AS rowNum
			, PROJ.PROJ_SEQ AS projSeq
			, PROJ.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, PROJ.PROJ_NM AS projNm
			, PROJ.PROJ_SW_NM AS projSwNm
			, PROJ.PROJ_STD_YMD AS projStdYmd
			, PROJ.PROJ_END_YMD AS projEndYmd
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = PROJ.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn	
			, PROJ.USE_YN AS useYn
			, DATE_FORMAT(PROJ.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(PROJ.REG_SEQ) AS regNm
			, DATE_FORMAT(PROJ.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(PROJ.UPT_SEQ) AS uptNm
			, LOGIN.USER_SEQ AS loginUserSeq		
		FROM TB_PROJ PROJ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE COMP.DEL_YN = 'N' AND COMP.USE_YN = 'Y' AND PROJ.USE_YN = 'Y' END)	
			AND PROJ.PROJ_SEQ = #{projSeq}
	</select>	
	
	<!-- 프로젝트별 사용자 목록 조회 -->	
	<select id="listUserByProjSeq" parameterType="long"
		resultType="com.iwi.iwms.api.comp.domain.ProjUserInfo">
		SELECT 
			COMP.COMP_NM AS compNm			
			, USER.USER_SEQ AS userSeq
			, USER.USER_NM AS userNm
			, USER.USER_GB_CD AS userGbCd
			, FN_GET_CODE_NM('USER_GB_CD', USER.USER_GB_CD) AS userGb			
			, USER.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD) AS busiRoll
			, DEPT.DEPT_NM AS deptNm
            , USER.POSI_NM AS posiNm
            , 'Y' AS assignYn
		FROM TB_USER USER
        INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ  		
		INNER JOIN TB_PROJ_USER PU ON USER.USER_SEQ = PU.USER_SEQ
		WHERE USER.DEL_YN = 'N'
			AND USER.USE_YN = 'Y'		
			AND PU.PROJ_SEQ = #{projSeq}
		ORDER BY USER.USER_SEQ
	</select>	

	<!-- 프로젝트 등록 -->
	<insert id="insertProj" parameterType="com.iwi.iwms.api.comp.domain.Proj"
		useGeneratedKeys="true" keyProperty="projSeq">
		INSERT INTO TB_PROJ
		(
		    COMP_SEQ
		    , PROJ_NM
		    , PROJ_SW_NM
		    , PROJ_STD_YMD
		    , PROJ_END_YMD
			, USE_YN
			, REG_SEQ
		) VALUES (
		    #{compSeq}
			, #{projNm}
			, #{projSwNm}
			, #{projStdYmd}
			, #{projEndYmd}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>		

	<!-- 프로젝트 수정 -->
	<update id="updateProj" parameterType="com.iwi.iwms.api.comp.domain.Proj">
		UPDATE TB_PROJ 
		SET
		    PROJ_NM = #{projNm}
			, PROJ_SW_NM = #{projSwNm}
			, PROJ_STD_YMD = #{projStdYmd}
			, PROJ_END_YMD = #{projEndYmd}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE PROJ_SEQ = #{projSeq}	
	</update>	

	<!-- 프로젝트 삭제 -->	
	<delete id="deleteProj" parameterType="com.iwi.iwms.api.comp.domain.Proj">
		DELETE 
		FROM TB_PROJ
		WHERE PROJ_SEQ = #{projSeq}	 
	</delete>

	<!-- 프로젝트 고객사 담당자 목록 조회 -->	
	<select id="listCustProjUser" parameterType="long"
		resultType="com.iwi.iwms.api.comp.domain.ProjUserInfo">
		SELECT 
			COMP.COMP_NM AS compNm			
			, USER.USER_SEQ AS userSeq
			, USER.USER_NM AS userNm
			, USER.USER_GB_CD AS userGbCd
			, FN_GET_CODE_NM('USER_GB_CD', USER.USER_GB_CD) AS userGb
			, USER.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD) AS busiRoll
			, DEPT.DEPT_NM AS deptNm
            , USER.POSI_NM AS posiNm
            , CASE WHEN PU.USER_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END AS assignYn
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
        INNER JOIN TB_PROJ PROJ ON COMP.COMP_SEQ = PROJ.COMP_SEQ     
        LEFT JOIN TB_PROJ_USER PU ON USER.USER_SEQ = PU.USER_SEQ 
			AND PROJ.PROJ_SEQ = PU.PROJ_SEQ
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ   	
		WHERE COMP.DEL_YN = 'N'
			AND COMP.USE_YN = 'Y'	
			AND PROJ.USE_YN = 'Y'	
			AND USER.DEL_YN = 'N'					
			AND USER.USE_YN = 'Y'
			AND PROJ.PROJ_SEQ = #{projSeq}
			AND USER.USER_GB_CD IN ('10','11')
		ORDER BY USER.USER_SEQ
	</select>
		
	<!-- 프로젝트 수행사 담당자 목록 조회 -->	
	<select id="listPerfProjUser" parameterType="long"
		resultType="com.iwi.iwms.api.comp.domain.ProjUserInfo">
		SELECT 
			COMP.COMP_NM AS compNm			
			, USER.USER_SEQ AS userSeq
			, USER.USER_NM AS userNm
			, USER.USER_GB_CD AS userGbCd
			, FN_GET_CODE_NM('USER_GB_CD', USER.USER_GB_CD) AS userGb			
			, USER.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD) AS busiRoll
			, DEPT.DEPT_NM AS deptNm
            , USER.POSI_NM AS posiNm
            , CASE WHEN PU.USER_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END AS assignYn
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_PROJ PROJ ON USER.COMP_SEQ = USER.COMP_SEQ     
        LEFT JOIN TB_PROJ_USER PU ON USER.USER_SEQ = PU.USER_SEQ 
			AND PU.PROJ_SEQ = #{projSeq}
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ   
		WHERE COMP.DEL_YN = 'N'
			AND COMP.USE_YN = 'Y'	
			AND PROJ.USE_YN = 'Y'	
			AND USER.DEL_YN = 'N'			
			AND USER.USE_YN = 'Y'
			AND PROJ.PROJ_SEQ = #{projSeq}
			AND USER.USER_GB_CD = '01'
		ORDER BY USER.USER_SEQ
	</select>

	<!-- 프로젝트 사용자 등록 -->
	<insert id="updateProjUser" parameterType="com.iwi.iwms.api.comp.domain.ProjUser">
		INSERT INTO TB_PROJ_USER
		(
		    PROJ_SEQ
		    , USER_SEQ
		    , BUSI_ROLL_CD
			, REG_SEQ
		) 
		VALUES 
		<foreach collection="usersSeq" item="item" separator="," >
		(
		    #{projSeq}
			, #{item}
			, (SELECT BUSI_ROLL_CD FROM TB_USER WHERE USER_SEQ = #{item})
			, #{loginUserSeq}
		)			
		</foreach>
	</insert>		
	
	<!-- 프로로젝트별 사용자 삭제 -->	
	<delete id="deleteProjUser" parameterType="com.iwi.iwms.api.comp.domain.ProjUser">
		DELETE PU 
		FROM TB_PROJ_USER AS PU
		INNER JOIN TB_USER USER ON PU.USER_SEQ = USER.USER_SEQ
		WHERE PU.PROJ_SEQ = #{projSeq}
		<if test='projUserGb != null and projUserGb == 1'>
			AND USER.USER_GB_CD = '01'
		</if>	
		<if test='projUserGb != null and projUserGb == 2'>
			AND USER.USER_GB_CD IN ('10','11')
		</if>				
	</delete>	
	
	<sql id="selectSite">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY SITE.SITE_SEQ) AS rowNum
			, SITE.SITE_SEQ AS siteSeq
			, SITE.PROJ_SEQ AS projSeq
			, SITE.SITE_NM AS siteNm
			, SITE.SITE_SW_NM AS siteSwNm
			, SITE.SITE_GB_CD AS siteGbCd
			, FN_GET_CODE_NM('SITE_GB_CD', SITE.SITE_GB_CD) AS siteGb
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = SITE.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn
			, SITE.USE_YN AS useYn
			, DATE_FORMAT(SITE.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(SITE.REG_SEQ) AS regNm   
			, DATE_FORMAT(SITE.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(SITE.UPT_SEQ) AS uptNm
		FROM TB_SITE SITE
		INNER JOIN TB_PROJ PROJ ON SITE.PROJ_SEQ = PROJ.PROJ_SEQ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE COMP.USE_YN = 'Y' AND PROJ.USE_YN = 'Y' AND SITE.USE_YN = 'Y' END)		
	</sql>
	
	<!-- 사이트 목록 조회 -->	
	<select id="listSite" parameterType="hashMap"
		resultType="com.iwi.iwms.api.comp.domain.SiteInfo">
		<include refid="selectSite"></include>
			AND SITE.PROJ_SEQ = #{projSeq}
		<if test='useYn != null and useYn != ""'>
			AND SITE.USE_YN = UPPER(#{useYn})
		</if>			
		ORDER BY SITE.SITE_SEQ DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	

	<!-- 사이트 수 -->	
	<select id="countSite" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(*)
		FROM TB_SITE SITE
		INNER JOIN TB_PROJ PROJ ON SITE.PROJ_SEQ = PROJ.PROJ_SEQ
		INNER JOIN TB_COMPANY COMP ON PROJ.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE COMP.USE_YN = 'Y' AND PROJ.USE_YN = 'Y' AND SITE.USE_YN = 'Y' END)	
			AND SITE.PROJ_SEQ = #{projSeq}
		<if test='useYn != null and useYn != ""'>
			AND SITE.USE_YN = UPPER(#{useYn})
		</if>				
	</select>	

	<!-- 사이트 단일 조회 -->	
	<select id="getSiteBySeq" parameterType="hashMap"
		resultType="com.iwi.iwms.api.comp.domain.SiteInfo">
		<include refid="selectSite"></include>
			AND SITE.SITE_SEQ = #{siteSeq}
	</select>

	<!-- 사이트 등록 -->
	<insert id="insertSite" parameterType="com.iwi.iwms.api.comp.domain.Site"
		useGeneratedKeys="true" keyProperty="siteSeq">
		INSERT INTO TB_SITE
		(
		    PROJ_SEQ
		    , SITE_NM
		    , SITE_SW_NM
		    , SITE_GB_CD
			, USE_YN
			, REG_SEQ
		) VALUES (
		   #{projSeq}
			, #{siteNm}
			, #{siteSwNm}
			, #{siteGbCd}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>		

	<!-- 사이트 수정 -->
	<update id="updateSite" parameterType="com.iwi.iwms.api.comp.domain.Site">
		UPDATE TB_SITE 
		SET
		    SITE_NM = #{siteNm}
			, SITE_SW_NM = #{siteSwNm}
			, SITE_GB_CD = #{siteGbCd}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE SITE_SEQ = #{siteSeq}	
	</update>	

	<!-- 사이트 삭제 -->	
	<delete id="deleteSite" parameterType="com.iwi.iwms.api.comp.domain.Site">
		DELETE 
		FROM TB_SITE
		WHERE SITE_SEQ = #{siteSeq}	 
	</delete>		
</mapper>