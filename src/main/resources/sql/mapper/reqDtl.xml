<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.req.mapper.ReqDtlMapper">

	<sql id="selectReqDtl">
		SELECT 
			REQ.REQ_SEQ AS reqSeq
			, REQ.REQ_NO AS reqNo
			, DTL.REQ_DTL_SEQ AS reqDtlSeq
			, DTL.REQ_DTL_NO AS reqDtlNo
			, SITE.SITE_SEQ AS siteSeq	
            , SITE.SITE_NM AS siteNm	
			, REQ.REQ_TITLE AS reqTitle
            , REQ.REQ_CONTENT AS reqContent
			, REQ.REQ_YMD AS reqYmd
			, REQ.REQ_END_YMD AS reqEndYmd
			, REQ.REQ_TYPE_CD AS reqTypeCd
			, FN_GET_CODE_NM('REQ_TYPE_CD', REQ.REQ_TYPE_CD) AS reqType
			, REQ.REQ_GB_CD AS reqGbCd
			, FN_GET_CODE_NM('REQ_GB_CD', REQ.REQ_GB_CD) AS reqGb
			, CASE WHEN DHIS.REQ_DTL_SEQ IS NULL THEN HIS.REQ_HIS_SEQ ELSE DHIS.REQ_DTL_HIS_SEQ END AS hisSeq
			, CASE WHEN DHIS.REQ_DTL_SEQ IS NULL THEN HIS.REQ_STAT_CD ELSE DHIS.REQ_DTL_STAT_CD END AS statCd
			, CASE WHEN DHIS.REQ_DTL_SEQ IS NULL THEN FN_GET_CODE_NM('REQ_STAT_CD', HIS.REQ_STAT_CD) ELSE FN_GET_CODE_NM('REQ_DTL_STAT_CD', DHIS.REQ_DTL_STAT_CD) END AS stat 
			, CASE WHEN DHIS.REQ_DTL_SEQ IS NULL THEN HIS.REQ_STAT_CMT ELSE DHIS.REQ_DTL_STAT_CMT END AS statCmt
			, FN_GET_USER_NM(DTL.REQ_DTL_USER_SEQ) AS reqDtlUser
			, DTL.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', DTL.BUSI_ROLL_CD) AS busiRoll 
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = REQ.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn
			, DTL.USE_YN AS useYn
			, DATE_FORMAT(DTL.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(DTL.REG_SEQ) AS regNm	
			, 'TB_REQ' AS fileRefTb
			, 'REQ_SEQ' AS fileRefCol				
			, LOGIN.USER_SEQ AS loginUserSeq
		FROM TB_REQ REQ
		INNER JOIN TB_SITE SITE ON REQ.SITE_SEQ = SITE.SITE_SEQ
		INNER JOIN TB_REQ_HIS HIS ON REQ.REQ_SEQ = HIS.REQ_SEQ
			AND HIS.REQ_HIS_SEQ = (SELECT MAX(REQ_HIS_SEQ) FROM TB_REQ_HIS WHERE REQ_SEQ = REQ.REQ_SEQ)	
		LEFT JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ		
		LEFT JOIN TB_REQ_DTL_HIS DHIS ON DTL.REQ_DTL_SEQ = DHIS.REQ_DTL_SEQ
			AND DHIS.REQ_DTL_HIS_SEQ = (SELECT MAX(REQ_DTL_HIS_SEQ) FROM TB_REQ_DTL_HIS WHERE REQ_DTL_SEQ = DTL.REQ_DTL_SEQ)		
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE REQ.DEL_YN = 'N' AND REQ.USE_YN = 'Y'END)				
	</sql>

	<resultMap id="resultReqDtlMap" type="com.iwi.iwms.api.req.domain.ReqDtlInfo">
		<result property="reqSeq" column="reqSeq"/>
		<result property="reqDtlSeq" column="reqDtlSeq"/>
	   	<collection property="attachedFiles" column="fileRefTb=fileRefTb,fileRefCol=fileRefCol,fileRefSeq=reqSeq" 
			ofType="com.iwi.iwms.api.file.domain.UploadFileInfo" select="com.iwi.iwms.api.file.mapper.FileMapper.listFileByRef"/>	
	   	<collection property="tasks" column="reqSeq=reqSeq" 
			ofType="com.iwi.iwms.api.req.domain.TaskInfo" select="listTaskBySeq"/>			
	   	<collection property="participants" column="reqSeq=reqSeq" 
			ofType="com.iwi.iwms.api.req.domain.ParticipantInfo" select="listParticipantBySeq"/>			
	   	<collection property="histories" column="reqSeq=reqSeq,reqDtlSeq=reqDtlSeq" 
			ofType="com.iwi.iwms.api.req.domain.HisInfo" select="listHisBySeq"/>
	   	<collection property="comments" column="reqSeq=reqSeq,reqDtlSeq=reqDtlSeq,loginUserSeq=loginUserSeq" 
			ofType="com.iwi.iwms.api.req.domain.CmtInfo" select="listCmtBySeq"/>	
	</resultMap>
	
	<!-- 요청사항 상세 수 -->		
	<select id="countReqDtlByReqSeq" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(*)
		FROM TB_REQ_DTL DTL	
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE DTL.USE_YN = 'Y'END)
		AND DTL.REQ_SEQ = #{reqSeq}
	</select>		

	<!-- 요청사항 상세 조회 -->		
	<select id="getReqDtlByReqSeq" parameterType="hashMap"
		resultMap="resultReqDtlMap">
		<include refid="selectReqDtl"></include>
			AND REQ.REQ_SEQ = #{reqSeq}
	</select>	
	
	<!-- 요청사항 상세 조회 -->		
	<select id="getReqDtlBySeq" parameterType="hashMap"
		resultMap="resultReqDtlMap">
		<include refid="selectReqDtl"></include>
			AND REQ.REQ_SEQ = #{reqSeq}
			AND DTL.REQ_DTL_SEQ = #{reqDtlSeq}		
	</select>	

	<!-- 접수: 담당자 배정 -->	
	<!-- 요청사항 상세 등록 -->	
	<insert id="insertReqDtl" parameterType="com.iwi.iwms.api.req.domain.ReqDtl"
		useGeneratedKeys="true" keyProperty="reqDtlSeq">
		INSERT INTO TB_REQ_DTL
		(
		    REQ_DTL_NO
		    , REQ_SEQ
			, REQ_DTL_USER_SEQ
			, BUSI_ROLL_CD
			, REQ_DTL_STAT_CD
			, TGT_MM
			, USE_YN
			, REG_SEQ
		) VALUES (
		    (
				SELECT
					CONCAT(REQ.REQ_NO, '-', LPAD(COALESCE(MAX(SUBSTR(DTL.REQ_DTL_NO, 12)), 0) + 1, 2, 0))
				FROM TB_REQ REQ
				LEFT JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ
				WHERE REQ.REQ_SEQ = #{reqSeq}
				LIMIT 1					
		    )
			, #{reqSeq}
			, #{reqDtlUserSeq}
			, (SELECT BUSI_ROLL_CD FROM TB_USER WHERE USER_SEQ = #{reqDtlUserSeq})
			, #{statCd}
			, #{tgtMm}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>	
	
	<!-- 처리중: 담당자 확인 -->	
	<update id="updateReqDtlStatInProgress" parameterType="com.iwi.iwms.api.req.domain.ReqDtl">
		UPDATE TB_REQ_DTL 
		SET
			REQ_DTL_STAT_CD = #{statCd}
			, REQ_DTL_STD_YMD = DATE_FORMAT(CURRENT_TIMESTAMP, "%Y%m%d")
			, MNG_OK_YMD = DATE_FORMAT(CURRENT_TIMESTAMP, "%Y%m%d")
			, MNG_OK_USER_SEQ = #{loginUserSeq}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE REQ_DTL_SEQ = #{reqDtlSeq}	
	</update>		

	<!-- 처리완료: 처리 시간 업데이트 -->	
	<update id="updateReqDtlStatProcessed" parameterType="com.iwi.iwms.api.req.domain.ReqDtl">
		UPDATE TB_REQ_DTL 
		SET
			REQ_DTL_STAT_CD = #{statCd}
			, PROC_YMD = DATE_FORMAT(CURRENT_TIMESTAMP, "%Y%m%d")
			, PROC_HH = #{procHh}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE REQ_DTL_SEQ = #{reqDtlSeq}	
	</update>	

	<!-- 검수완료: 고객사 확인 + 고객사 평가 업데이트 -->	
	<update id="updateReqDtlStatInspectionCompleted" parameterType="com.iwi.iwms.api.req.domain.ReqDtl">
		UPDATE TB_REQ_DTL 
		SET
			REQ_DTL_STAT_CD = #{statCd}
			, REQ_DTL_END_YMD = DATE_FORMAT(CURRENT_TIMESTAMP, "%Y%m%d")
			, CUS_OK_YMD = DATE_FORMAT(CURRENT_TIMESTAMP, "%Y%m%d")
			, CUS_OK_USER_SEQ = #{loginUserSeq}
			, REQ_DTL_EVAL_SCORE = #{reqDtlEvalScore}
			, REQ_DTL_EVAL_CMT = #{reqDtlEvalCmt}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE REQ_DTL_SEQ = #{reqDtlSeq}	
	</update>	
	
	<!-- 취소: 취소 -->	
	<update id="updateReqDtlStatCancel" parameterType="com.iwi.iwms.api.req.domain.ReqDtl">
		UPDATE TB_REQ_DTL 
		SET
			REQ_DTL_STAT_CD = #{statCd}
			, CANCEL_YMD = DATE_FORMAT(CURRENT_TIMESTAMP, "%Y%m%d")
			, CANCEL_USER_SEQ = #{loginUserSeq}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE REQ_DTL_SEQ = #{reqDtlSeq}	
	</update>	
	
	<!-- 요청사항 상세 수정 -->	
	<update id="updateReqDtl" parameterType="com.iwi.iwms.api.req.domain.ReqDtl">
		UPDATE TB_REQ_DTL 
		SET
			TGT_MM = #{tgtMm}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE REQ_DTL_SEQ = #{reqDtlSeq}	
	</update>
	
	<!-- 요청사항 상세 삭제 -->	
	<delete id="deleteReqDtl" parameterType="com.iwi.iwms.api.req.domain.ReqDtl">
		DELETE 
		FROM TB_REQ_DTL
		WHERE REQ_DTL_SEQ = #{reqDtlSeq}	 
	</delete>
	
	<!-- 요청사항 상세 이력 등록 -->	
	<insert id="insertReqDtlHis" parameterType="com.iwi.iwms.api.req.domain.His">
		INSERT INTO TB_REQ_DTL_HIS
		(
		    REQ_DTL_SEQ
		    , REQ_DTL_STAT_CD
			, REQ_DTL_STAT_CMT
			, REG_SEQ
		) VALUES (
			#{reqDtlSeq}
			, #{statCd}
			, #{statCmt}
			, #{loginUserSeq}
		)		
	</insert>
	
	<!-- 작업 조회 -->	
	<select id="listTaskBySeq" parameterType="hashMap"
		resultType="com.iwi.iwms.api.req.domain.TaskInfo">
		SELECT
			REQ.REQ_SEQ AS reqSeq
			, DTL.REQ_DTL_SEQ AS reqDtlSeq
			, DTL.BUSI_ROLL_CD AS busiRollCd
               , FN_GET_CODE_NM('BUSI_ROLL_CD', DTL.BUSI_ROLL_CD)  AS busiRoll
               , DTL.REQ_DTL_USER_SEQ AS reqDtlUserSeq
               , FN_GET_USER_NM(DTL.REQ_DTL_USER_SEQ) AS reqDtlUser
		FROM TB_REQ REQ
		INNER JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ
           WHERE REQ.REQ_SEQ = #{reqSeq}
		ORDER BY DTL.REQ_DTL_SEQ
	</select>
		
	<!-- 참여자 조회 -->	
	<select id="listParticipantBySeq" parameterType="hashMap"
		resultType="com.iwi.iwms.api.req.domain.ParticipantInfo">
		SELECT 
			USER.USER_SEQ AS userSeq
            , USER.USER_NM AS userNm
            , USER.USER_GB_CD AS userGbCd
            , FN_GET_CODE_NM('USER_GB_CD', USER.USER_GB_CD)  AS userGb
            , USER.POSI_NM AS posiNm
            , USER.BUSI_ROLL_CD AS busiRollCd
            , FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD)  AS busiRoll
		FROM TB_USER USER
		INNER JOIN (
			SELECT 
				REG_SEQ AS USER_SEQ
            FROM TB_REQ_HIS
            WHERE REQ_SEQ = #{reqSeq}     
			UNION    
			SELECT 
				REQ_DTL_USER_SEQ AS USER_SEQ
            FROM TB_REQ_DTL
            WHERE REQ_SEQ = #{reqSeq}         
        ) PART ON USER.USER_SEQ = PART.USER_SEQ
        WHERE USER.DEL_YN = 'N'
			AND USER.USE_YN = 'Y'        
        ORDER BY FIELD(USER.USER_GB_CD, '00', '10', '11', '01')
	</select>	

	<!-- 요청사항 상세 이력 조회 -->	
	<select id="listHisBySeq" parameterType="hashMap"
		resultType="com.iwi.iwms.api.req.domain.HisInfo">
		SELECT
			*
		FROM (
			SELECT
				REQ.REQ_SEQ AS reqSeq
				, null AS reqDtlSeq
				, HIS.REQ_STAT_CD AS statCd
				, FN_GET_CODE_NM('REQ_STAT_CD', HIS.REQ_STAT_CD) AS stat			
				, HIS.REQ_STAT_CMT AS statCmt
				, DATE_FORMAT(HIS.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
				, FN_GET_USER_NM(HIS.REG_SEQ) AS regNm
			FROM TB_REQ REQ
			INNER JOIN TB_REQ_HIS HIS ON REQ.REQ_SEQ = HIS.REQ_SEQ
			WHERE REQ.REQ_SEQ = #{reqSeq}
			UNION ALL    
			SELECT
				REQ.REQ_SEQ AS reqSeq
				, DTL.REQ_DTL_SEQ AS reqDtlSeq
				, HIS.REQ_DTL_STAT_CD AS statCd
				, FN_GET_CODE_NM('REQ_DTL_STAT_CD', HIS.REQ_DTL_STAT_CD) AS stat
				, HIS.REQ_DTL_STAT_CMT AS statCmt
				, DATE_FORMAT(HIS.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
				, FN_GET_USER_NM(HIS.REG_SEQ) AS regNm
			FROM TB_REQ REQ
			INNER JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ
			INNER JOIN TB_REQ_DTL_HIS HIS ON DTL.REQ_DTL_SEQ = HIS.REQ_DTL_SEQ
			WHERE REQ.REQ_SEQ = #{reqSeq}
				AND DTL.REQ_DTL_SEQ = #{reqDtlSeq}
		) HIS
        ORDER BY regDt
	</select>		

	<resultMap id="resultReqAndDtlCmtMap" type="com.iwi.iwms.api.req.domain.CmtInfo">
		<result property="cmtSeq" column="cmtSeq"/>
	   	<collection property="attachedFiles" column="fileRefTb=fileRefTb,fileRefCol=fileRefCol,fileRefSeq=cmtSeq" 
			ofType="com.iwi.iwms.api.file.domain.UploadFileInfo" select="com.iwi.iwms.api.file.mapper.FileMapper.listFileByRef"/>
	</resultMap>
		
	<!-- 요청사항 상세 코멘트 조회 -->	
	<select id="listCmtBySeq" parameterType="hashMap"
		resultMap="resultReqAndDtlCmtMap">
		SELECT
			*
		FROM (
			SELECT
				REQ.REQ_SEQ AS reqSeq
				, null AS reqDtlSeq
				, CMT.REQ_CMT_SEQ AS cmtSeq
				, CMT.REQ_CMT AS cmt
				, HIS.REQ_STAT_CD AS statCd
				, FN_GET_CODE_NM('REQ_STAT_CD', HIS.REQ_STAT_CD) AS stat
				, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = CMT.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn
				, CMT.USE_YN AS useYn
				, DATE_FORMAT(CMT.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
				, FN_GET_USER_NM(CMT.REG_SEQ) AS regNm
				, 'TB_REQ_CMT' AS fileRefTb
				, 'REQ_CMT_SEQ' AS fileRefCol			
			FROM TB_REQ REQ
			INNER JOIN TB_REQ_CMT CMT ON REQ.REQ_SEQ = CMT.REQ_SEQ
			INNER JOIN TB_REQ_HIS HIS ON CMT.REQ_SEQ = HIS.REQ_SEQ
				AND CMT.REQ_HIS_SEQ = HIS.REQ_HIS_SEQ
			LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}	
			WHERE REQ.REQ_SEQ = #{reqSeq}
			UNION ALL    
			SELECT
				REQ.REQ_SEQ AS reqSeq
				, DTL.REQ_DTL_SEQ AS reqDtlSeq
				, CMT.REQ_DTL_CMT_SEQ AS cmtSeq
				, CMT.REQ_DTL_CMT AS cmt
				, HIS.REQ_DTL_STAT_CD AS statCd
				, FN_GET_CODE_NM('REQ_DTL_STAT_CD', HIS.REQ_DTL_STAT_CD) AS stat
				, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = CMT.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn
				, CMT.USE_YN AS useYn
				, DATE_FORMAT(CMT.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
				, FN_GET_USER_NM(CMT.REG_SEQ) AS regNm
				, 'TB_REQ_DTL_CMT' AS fileRefTb
				, 'REQ_DTL_CMT_SEQ' AS fileRefCol			
			FROM TB_REQ REQ
			INNER JOIN TB_REQ_DTL DTL ON REQ.REQ_SEQ = DTL.REQ_SEQ
			INNER JOIN TB_REQ_DTL_CMT CMT ON DTL.REQ_DTL_SEQ = CMT.REQ_DTL_SEQ
			INNER JOIN TB_REQ_DTL_HIS HIS ON CMT.REQ_DTL_SEQ = HIS.REQ_DTL_SEQ
				AND CMT.REQ_DTL_HIS_SEQ = HIS.REQ_DTL_HIS_SEQ
			LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}	
			WHERE REQ.REQ_SEQ = #{reqSeq}
		) CMT
        ORDER BY regDt
	</select>		
</mapper>