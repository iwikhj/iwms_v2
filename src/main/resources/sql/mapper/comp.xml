<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iwi.iwms.api.comp.mapper.CompMapper">
	
	<!-- 소속 목록 조회 -->
	<select id="listComp" parameterType="hashMap"
		resultType="com.iwi.iwms.api.comp.domain.CompInfo">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY COMP.COMP_SEQ) AS rowNum
			, COMP.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, COMP.COMP_GB_CD AS compGbCd
			, FN_GET_CODE_NM('COMP_GB_CD', COMP.COMP_GB_CD) AS compGb
			, COMP.COMP_TEL AS compTel
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = COMP.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn				
			, COMP.USE_YN AS useYn
			, COMP.DEL_YN AS delYn
			, DATE_FORMAT(COMP.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(COMP.REG_SEQ) AS regNm
			, DATE_FORMAT(COMP.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(COMP.UPT_SEQ) AS uptNm
			, LOGIN.USER_SEQ AS loginUserSeq			
		FROM TB_COMPANY COMP
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE COMP.DEL_YN = 'N' AND COMP.USE_YN = 'Y' END)	
		<if test='search != null and search != ""'>
			AND COMP.COMP_NM LIKE CONCAT('%', #{search}, '%') 
			OR COMP.COMP_TEL LIKE CONCAT('%', #{search}, '%') 
		</if>			
		ORDER BY COMP.COMP_SEQ DESC
		<if test='pagination != null and pagination != ""'>
			LIMIT #{pagination.limitPerPage} OFFSET #{pagination.offset}
		</if>
	</select>	
		
	<!-- 소속 수 조회 -->
	<select id="countComp" parameterType="hashMap"
		resultType="int">
		SELECT 
			COUNT(*)
		FROM TB_COMPANY COMP
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE COMP.DEL_YN = 'N' AND COMP.USE_YN = 'Y' END)		
		<if test='search != null and search != ""'>
			AND COMP.COMP_NM LIKE CONCAT('%', #{search}, '%') 
			OR COMP.COMP_TEL LIKE CONCAT('%', #{search}, '%') 
		</if>			
	</select>	

	<resultMap id="resultCompMap" type="com.iwi.iwms.api.comp.domain.CompInfo">
		<result property="compSeq" column="compSeq"/>
	   	<collection property="depts" column="compSeq" 
			ofType="com.iwi.iwms.api.comp.domain.DeptInfo" select="listDeptByCompSeq"/>
	   	<collection property="users" column="compSeq" 
			ofType="com.iwi.iwms.api.user.domain.UserInfo" select="listUserByCompSeq"/>
	</resultMap>
			
	<!-- 소속 단일 조회 -->
	<select id="getCompBySeq" parameterType="hashMap"
		resultMap="resultCompMap">
		SELECT 
			COMP.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, COMP.COMP_GB_CD AS compGbCd
			, FN_GET_CODE_NM('COMP_GB_CD', COMP.COMP_GB_CD) AS compGb
			, COMP.COMP_TEL AS compTel
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = COMP.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn				
			, COMP.USE_YN AS useYn
			, COMP.DEL_YN AS delYn
			, DATE_FORMAT(COMP.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(COMP.REG_SEQ) AS regNm
			, DATE_FORMAT(COMP.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(COMP.UPT_SEQ) AS uptNm
			, LOGIN.USER_SEQ AS loginUserSeq			
		FROM TB_COMPANY COMP
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE COMP.DEL_YN = 'N' AND COMP.USE_YN = 'Y' END)	
			AND COMP.COMP_SEQ = #{compSeq}
	</select>	
	
	<!-- 소속별 사용자 목록 조회 -->
	<select id="listUserByCompSeq" parameterType="long"
		resultType="com.iwi.iwms.api.user.domain.UserInfo">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY USER.USER_SEQ) AS rowNum
			, USER.USER_SEQ AS userSeq
			, USER.USER_ID AS userId
			, USER.USER_NM AS userNm
			, USER.USER_EMAIL AS userEmail
			, USER.SSO_KEY AS ssoKey
			, AUTH.AUTH_SEQ AS authSeq
			, AUTH.AUTH_CD AS authCd
			, AUTH.AUTH_NM AS authNm
			, USER.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, USER.DEPT_SEQ AS deptSeq
			, DEPT.DEPT_NM AS deptNm
			, USER.POSI_NM AS posiNm
			, USER.USER_GB_CD AS userGbCd
			, FN_GET_CODE_NM('USER_GB_CD', USER.USER_GB_CD)  AS userGb
			, USER.BUSI_ROLL_CD AS busiRollCd
			, FN_GET_CODE_NM('BUSI_ROLL_CD', USER.BUSI_ROLL_CD)  AS busiRoll
			, USER.USER_TEL AS userTel
			, USER.USER_HP AS userHp
			, USER.USER_POST_NO AS userPostNo
			, USER.USER_ADDR AS userAddr
			, USER.USER_DTL_ADDR AS userDtlAddr
			, USER.VERIFY_YN AS verifyYn
			, USER.PWD_RESET_YN AS pwdResetYn
			, USER.LOGIN_ERR_CNT AS loginErrCnt
			, USER.LAST_LOGIN_IP AS lastLoginIp
			, USER.LAST_LOGIN_DT AS lastLoginDt
			, USER.USE_YN AS useYn			
			, DATE_FORMAT(USER.REG_DT, "%Y-%m-%d %H:%i:%s") AS regDt
			, FN_GET_USER_NM(USER.REG_SEQ) AS regNm    
			, DATE_FORMAT(USER.UPT_DT, "%Y-%m-%d %H:%i:%s") AS uptDt
			, FN_GET_USER_NM(USER.UPT_SEQ) AS uptNm		
		FROM TB_USER USER
		INNER JOIN TB_COMPANY COMP ON USER.COMP_SEQ = COMP.COMP_SEQ
		INNER JOIN TB_AUTH AUTH ON USER.AUTH_SEQ = AUTH.AUTH_SEQ
		LEFT JOIN TB_DEPT DEPT ON USER.DEPT_SEQ = DEPT.DEPT_SEQ  
		WHERE USER.DEL_YN = 'N'
			AND USER.USE_YN = 'Y'
			AND USER.COMP_SEQ = #{compSeq}		
		ORDER BY USER.USER_SEQ DESC
	</select>		
	
	<!-- 소속 등록 -->
	<insert id="insertComp" parameterType="com.iwi.iwms.api.comp.domain.Comp"
		useGeneratedKeys="true" keyProperty="compSeq">
		INSERT INTO TB_COMPANY
		(
		    COMP_NM
		    , COMP_GB_CD
			, COMP_TEL
			, USE_YN
			, REG_SEQ
		) VALUES (
		    #{compNm}
			, #{compGbCd}
			, #{compTel}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>		

	<!-- 소속 수정 -->
	<update id="updateComp" parameterType="com.iwi.iwms.api.comp.domain.Comp">
		UPDATE TB_COMPANY 
		SET
		    COMP_NM = #{compNm}
			, COMP_GB_CD = #{compGbCd}
			, COMP_TEL = #{compTel}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE COMP_SEQ = #{compSeq}	
	</update>	
	
	<!-- 소속 삭제 -->
	<delete id="deleteComp" parameterType="com.iwi.iwms.api.comp.domain.Comp">
		DELETE 
		FROM TB_COMPANY
		WHERE COMP_SEQ = #{compSeq}	 
	</delete>
	
	<!-- 부서 목록 조회 -->
	<select id="listDept" parameterType="hashMap"
		resultType="com.iwi.iwms.api.comp.domain.DeptInfo">
		SELECT 
			COMP.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm
			, DEPT.DEPT_SEQ AS deptSeq
			, DEPT.DEPT_NM AS deptNm
			, DEPT.DEPT_DESC AS deptDesc
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = DEPT.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn					
			, DEPT.USE_YN AS useYn
		FROM TB_DEPT DEPT
		INNER JOIN TB_COMPANY COMP ON DEPT.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE DEPT.USE_YN = 'Y' END)
		<if test='compSeq != null and compSeq != ""'>
			AND DEPT.COMP_SEQ = #{compSeq}
		</if>	
		ORDER BY DEPT.DEPT_ORDER_NO		
	</select>		
	
	<!-- 부서 단일 조회 -->	
	<select id="getDeptBySeq" parameterType="hashMap"
		resultType="com.iwi.iwms.api.comp.domain.DeptInfo">
		SELECT 
			COMP.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm		
			, DEPT.DEPT_SEQ AS deptSeq
			, DEPT.DEPT_NM AS deptNm
			, DEPT.DEPT_DESC AS deptDesc
			, CASE WHEN LOGIN.AUTH_SEQ = 1 OR LOGIN.USER_SEQ = DEPT.REG_SEQ THEN 'Y' ELSE 'N' END AS ownerYn					
			, DEPT.USE_YN AS useYn
		FROM TB_DEPT DEPT
		INNER JOIN TB_COMPANY COMP ON DEPT.COMP_SEQ = COMP.COMP_SEQ
		LEFT JOIN TB_USER LOGIN ON LOGIN.USER_SEQ = #{loginUserSeq}
		WHERE (CASE WHEN LOGIN.AUTH_SEQ = 1 THEN TRUE ELSE DEPT.USE_YN = 'Y' END)
			AND DEPT.DEPT_SEQ = #{deptSeq}
	</select>	
	
	<!-- 소속별 부서 목록 조회 -->
	<select id="listDeptByCompSeq" parameterType="long"
		resultType="com.iwi.iwms.api.comp.domain.DeptInfo">
		SELECT 
			DEPT.COMP_SEQ AS compSeq
			, COMP.COMP_NM AS compNm	
			, DEPT.DEPT_SEQ AS deptSeq
			, DEPT.DEPT_NM AS deptNm
			, DEPT.DEPT_DESC AS deptDesc
			, DEPT.USE_YN AS useYn
		FROM TB_DEPT DEPT
		INNER JOIN TB_COMPANY COMP ON DEPT.COMP_SEQ = COMP.COMP_SEQ
		WHERE DEPT.USE_YN = 'Y'
			AND DEPT.COMP_SEQ = #{compSeq}
		ORDER BY DEPT.DEPT_ORDER_NO		
	</select>
	
	<!-- 부서 등록 -->
	<insert id="insertDept" parameterType="com.iwi.iwms.api.comp.domain.Dept"
		useGeneratedKeys="true" keyProperty="deptSeq">
		INSERT INTO TB_DEPT
		(
			COMP_SEQ
			, DEPT_NM
			, DEPT_DESC
			, UP_DEPT_SEQ
			, DEPT_ORDER_NO
			, USE_YN
			, REG_SEQ
		) VALUES (
			#{compSeq}
			, #{deptNm}
			, #{deptDesc}
			, #{upDeptSeq}
			, #{deptOrderNo}
			, #{useYn}
			, #{loginUserSeq}
		)		
	</insert>		

	<!-- 부서 수정 -->
	<update id="updateDept" parameterType="com.iwi.iwms.api.comp.domain.Dept">
		UPDATE TB_DEPT 
		SET
		    DEPT_NM = #{deptNm}
		    , DEPT_DESC = #{deptDesc}
		    , UP_DEPT_SEQ = #{upDeptSeq}
		    , DEPT_ORDER_NO = #{deptOrderNo}
			, USE_YN = #{useYn}
			, UPT_DT = CURRENT_TIMESTAMP
			, UPT_SEQ = #{loginUserSeq}
		WHERE DEPT_SEQ = #{deptSeq}	
	</update>	

	<!-- 부서 삭제 -->	
	<delete id="deleteDept" parameterType="com.iwi.iwms.api.comp.domain.Dept">
		DELETE 
		FROM TB_DEPT
		WHERE DEPT_SEQ = #{deptSeq}	 
	</delete>	
</mapper>